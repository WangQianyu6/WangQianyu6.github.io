<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>望千鱼`Blog</title>
  
  <subtitle>轻舟已过万重山</subtitle>
  <link href="http://wangqianyu6.github.io/atom.%20xml" rel="self"/>
  
  <link href="http://wangqianyu6.github.io/"/>
  <updated>2023-07-16T16:39:21.600Z</updated>
  <id>http://wangqianyu6.github.io/</id>
  
  <author>
    <name>王千予</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>数据科学与工程学院暑期夏令营实践项目</title>
    <link href="http://wangqianyu6.github.io/posts/8e58660f.html"/>
    <id>http://wangqianyu6.github.io/posts/8e58660f.html</id>
    <published>2023-07-13T03:46:40.000Z</published>
    <updated>2023-07-16T16:39:21.600Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="为什么选择Hexo？"><a href="#为什么选择Hexo？" class="headerlink" title="为什么选择Hexo？"></a>为什么选择Hexo？</h1><p>&ensp;&ensp;&ensp;&ensp;Hexo 是一个基于 Node.js 的静态博客生成工具，它提供了简洁的命令行界面和易于理解的配置文件。</p><p>&ensp;&ensp;&ensp;&ensp;Hexo 拥有活跃的社区，提供了大量的主题和插件，可以轻松实现各种功能和样式定制。</p><p>&ensp;&ensp;&ensp;&ensp;Hexo 生成的是静态网页文件，不需要依赖数据库和服务器端代码，因此具有较高的安全性。</p><h1 id="为什么选择Butterfly？"><a href="#为什么选择Butterfly？" class="headerlink" title="为什么选择Butterfly？"></a>为什么选择Butterfly？</h1><p>&ensp;&ensp;我选择了Butterfly主题，Butterfly是一个自定义性非常高的主题，并且有大量的用户使用，生态非常完善。选取原因如下：</p><ul><li><p>美观现代化</p><p>&ensp;&ensp;&ensp;&ensp;时尚、美观和现代化的设计风格，吸引人的界面和布局，能够给读者留下深刻的印象。</p></li><li><p>响应式设计</p><p>&ensp;&ensp;&ensp;&ensp;采用响应式设计，可以在各种设备和屏幕尺寸上提供良好的用户体验。可以在桌面、平板电脑和手机等设备上自适应地显示，读者可以随时随地访问你的博客。</p></li><li><p>可定制性</p><p>&ensp;&ensp;&ensp;&ensp;主题提供了丰富的定制选项，允许自定义博客的外观和功能.可以调整颜色、字体、布局等方面的设置。</p></li><li><p>多样布局和组件</p><p>&ensp;&ensp;&ensp;&ensp;Butterfly主题提供了多种布局和组件选项，如卡片式布局、侧边栏、标签云、作者简介等，根据内容类型和需要创建丰富多样的页面。</p></li><li><p>文档和支持</p><p>&ensp;&ensp;&ensp;&ensp;详细的文档和支持资源，支持 Latex 编写，Mermaid 流程图等附加的 Markdown 功能。</p></li></ul><h1 id="页面布局及实现"><a href="#页面布局及实现" class="headerlink" title="页面布局及实现"></a>页面布局及实现</h1><h2 id="导航栏"><a href="#导航栏" class="headerlink" title="导航栏"></a>导航栏</h2><p>&ensp;&ensp;&ensp;&ensp;导航栏位于页面的顶部，用于提供网站的导航链接，快速导航到所需的内容，包括主页，博文（分类、标签、归档），生活（追番），友链，留言板，关于笔者。</p><details class="folding-tag" radio blue><summary> 点击查看 导航栏 </summary>              <div class='content'>              <p><img src="https://img01.anheyu.com/useruploads/215/2023/07/15/64b18c1dab470.jpeg" alt=""></p>              </div>            </details><details class="folding-tag" radio blue><summary> 点击查看 主页 </summary>              <div class='content'>              <p><img src="https://img01.anheyu.com/useruploads/215/2023/07/15/64b18ca766829.jpeg" alt=""></p><p><img src="https://img01.anheyu.com/useruploads/215/2023/07/15/64b18c43aff9f.png" alt=""></p>              </div>            </details><details class="folding-tag" radio blue><summary> 点击查看 博文 </summary>              <div class='content'>              <p>分类</p><p><img src="https://img01.anheyu.com/useruploads/215/2023/07/15/64b18d3b453cf.png" alt=""></p><p>标签</p><p><img src="https://img01.anheyu.com/useruploads/215/2023/07/15/64b18d3b522a5.png" alt=""></p><p>归档</p><p><details class="folding-tag" cyan red><summary> 查看实现方法 </summary>              <div class='content'>              <p><a href="https://www.bilibili.com/video/BV1nd4y1A7Wt/?spm_id_from=333.788&amp;vd_source=d53236894d2dc00540b94b714b873614">丝滑配置</a></p>              </div>            </details></p><p><img src="https://img01.anheyu.com/useruploads/215/2023/07/15/64b18d3add1c0.png" alt=""></p>              </div>            </details><details class="folding-tag" radio blue><summary> 点击查看 生活 </summary>              <div class='content'>              <p><img src="https://img01.anheyu.com/useruploads/215/2023/07/15/64b213cc19455.png" alt=""></p>              </div>            </details><p>友链：展示与其他博客主或网站建立的友情链接以及有用的网站链接！</p><details class="folding-tag" radio blue><summary> 点击查看 友链 </summary>              <div class='content'>              <p><img src="https://img01.anheyu.com/useruploads/215/2023/07/15/64b213cc44c2b.png" alt=""></p>              </div>            </details><p>&ensp;&ensp;&ensp;&ensp;Butterfly添加不同的友链预览并提供了详细的教程。步骤包括在友链页面中添加预览效果、配置默认友链页面以及在主题配置文件中进行参数设置等。同时，作者还分享了自己写的教程并提供了一些替换注释的技巧，以确保友链卡片的样式正确显示。</p><details class="folding-tag" cyan red><summary> 查看友链实现方法 </summary>              <div class='content'>              <p><a href="https://blog.anheyu.com/posts/292d.html">友链特效</a></p>              </div>            </details><details class="folding-tag" radio blue><summary> 点击查看 留言板 </summary>              <div class='content'>              <p><img src="https://img01.anheyu.com/useruploads/215/2023/07/15/64b213cc4350a.png" alt=""></p>              </div>            </details><details class="folding-tag" cyan red><summary> 查看留言板实现方法 </summary>              <div class='content'>              <p><a href="https://blog.anheyu.com/posts/sdxhu.html">留言板</a></p>              </div>            </details><details class="folding-tag" radio blue><summary> 点击查看 关于笔者 </summary>              <div class='content'>              <p><img src="https://img01.anheyu.com/useruploads/215/2023/07/15/64b213cc60171.png" alt=""></p>              </div>            </details><details class="folding-tag" cyan red><summary> 查看导航栏实现方法 </summary>              <div class='content'>              <p>在主题配置文件修改目录</p><p><img src="https://img01.anheyu.com/useruploads/215/2023/07/15/64b231cf788ca.jpeg" alt=""></p>              </div>            </details><h2 id="主页布局"><a href="#主页布局" class="headerlink" title="主页布局"></a>主页布局</h2><details class="folding-tag" radio blue><summary> 点击查看 主页详情 </summary>              <div class='content'>              <p><img src="https://img01.anheyu.com/useruploads/215/2023/07/15/64b218006af50.png" alt=""></p>              </div>            </details><h3 id="顶部缩略主页"><a href="#顶部缩略主页" class="headerlink" title="顶部缩略主页"></a>顶部缩略主页</h3><p><img src="https://img01.anheyu.com/useruploads/215/2023/07/15/64b2532f93ba9.jpeg" alt=""></p><h4 id="随便逛逛"><a href="#随便逛逛" class="headerlink" title="随便逛逛"></a>随便逛逛</h4><p>&ensp;&ensp;&ensp;&ensp;点击随机跳转到一篇文章。</p><h4 id="分类栏"><a href="#分类栏" class="headerlink" title="分类栏"></a>分类栏</h4><p>&ensp;&ensp;&ensp;&ensp;提供了三个分类项目可随意点击，鼠标移动到上方有动画显示，点击可查看分类归档。</p><details class="folding-tag" radio blue><summary> 点击查看 分类归档 </summary>              <div class='content'>              <p><img src="/Users/quinn/Library/Application Support/typora-user-images/image-20230715122452920.png" alt="image-20230715122452920"></p><p><img src="https://img01.anheyu.com/useruploads/215/2023/07/15/64b21d515edf8.png" alt=""></p>              </div>            </details><h4 id="轮播图"><a href="#轮播图" class="headerlink" title="轮播图"></a>轮播图</h4><p>&ensp;&ensp;&ensp;&ensp;选择推荐文章进行轮换播放，点击可查看文章详情。</p><h4 id="推荐文章"><a href="#推荐文章" class="headerlink" title="推荐文章"></a>推荐文章</h4><p>&ensp;&ensp;&ensp;&ensp;下面四个小分栏是推荐文章列表，点击可查看文章详情。</p><h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><details class="folding-tag" cyan open red><summary> 查看实现方法 </summary>              <div class='content'>              <p>本站首页 <code>Swiper Bar</code> 修改请参考 <a href="https://www.npmjs.com/package/hexo-butterfly-swiper-anzhiyu-pro">hexo-butterfly-swiper-anzhiyu-pro</a> 文档自行修改。</p><div class="tabs" id="test"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test-1">命令</button></li><li class="tab"><button type="button" data-href="#test-2">配置</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test-1"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-butterfly-categories-card --save</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test-2"><p>在<code>_config.butterfly.yml</code>加入以下配置项</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># hexo-butterfly-categories-card</span></span><br><span class="line"><span class="comment"># see https://akilar.top/posts/a9131002/</span></span><br><span class="line"><span class="attr">categoryBar:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># 开关</span></span><br><span class="line">  <span class="attr">priority:</span> <span class="number">5</span> <span class="comment">#过滤器优先权</span></span><br><span class="line">  <span class="attr">enable_page:</span> <span class="string">/</span> <span class="comment"># 应用页面</span></span><br><span class="line">  <span class="attr">layout:</span> <span class="comment"># 挂载容器类型</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">id</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">recent-posts</span></span><br><span class="line">    <span class="attr">index:</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">column:</span> <span class="string">odd</span> <span class="comment"># odd：3列 | even：4列</span></span><br><span class="line">  <span class="attr">row:</span> <span class="number">1</span> <span class="comment">#显示行数，默认两行，超过行数切换为滚动显示</span></span><br><span class="line">  <span class="attr">message:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">descr:</span> <span class="string">大学学习史</span></span><br><span class="line">      <span class="attr">cover:</span> <span class="string">https://cdn.cbd.int/akilar-candyassets@1.0.36/image/cover1.webp</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">descr:</span> <span class="string">前端成长历程</span></span><br><span class="line">      <span class="attr">cover:</span> <span class="string">https://cdn.cbd.int/akilar-candyassets@1.0.36/image/cover2.webp</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">descr:</span> <span class="string">生活欢乐多</span></span><br><span class="line">      <span class="attr">cover:</span> <span class="string">https://cdn.cbd.int/akilar-candyassets@1.0.36/image/cover3.webp</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">descr:</span></span><br><span class="line">      <span class="attr">cover:</span> <span class="string">https://cdn.cbd.int/akilar-candyassets@1.0.36/image/cover4.webp</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">descr:</span></span><br><span class="line">      <span class="attr">cover:</span> <span class="string">https://cdn.cbd.int/akilar-candyassets@1.0.36/image/cover5.webp</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">descr:</span></span><br><span class="line">      <span class="attr">cover:</span> <span class="string">https://cdn.cbd.int/akilar-candyassets@1.0.36/image/cover6.webp</span></span><br><span class="line">  <span class="attr">custom_css:</span> <span class="string">https://cdn.cbd.int/hexo-butterfly-categories-card@1.0.0/lib/categorybar.css</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>              </div>            </details><h3 id="分类卡片"><a href="#分类卡片" class="headerlink" title="分类卡片"></a>分类卡片</h3><p>&ensp;&ensp;&ensp;&ensp;点击可进入查看分类归档。</p><p><img src="https://img01.anheyu.com/useruploads/215/2023/07/15/64b21e7608ce8.jpeg" alt=""></p><h3 id="实现-1"><a href="#实现-1" class="headerlink" title="实现"></a>实现</h3><details class="folding-tag" cyan open red><summary> 查看实现方法 </summary>              <div class='content'>              <p>详情请看教程<a href="https://blog.anheyu.com/posts/sdxhu.html"> Categories Magnet</a></p><div class="tabs" id="test"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test-1">命令</button></li><li class="tab"><button type="button" data-href="#test-2">配置</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test-1"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-butterfly-categories-card --save</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test-2"><p>在<code>_config.butterfly.yml</code>加入以下配置项</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># hexo-butterfly-categories-card</span></span><br><span class="line"><span class="comment"># see https://akilar.top/posts/a9131002/</span></span><br><span class="line"><span class="attr">categoryBar:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># 开关</span></span><br><span class="line">  <span class="attr">priority:</span> <span class="number">5</span> <span class="comment">#过滤器优先权</span></span><br><span class="line">  <span class="attr">enable_page:</span> <span class="string">/</span> <span class="comment"># 应用页面</span></span><br><span class="line">  <span class="attr">layout:</span> <span class="comment"># 挂载容器类型</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">id</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">recent-posts</span></span><br><span class="line">    <span class="attr">index:</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">column:</span> <span class="string">odd</span> <span class="comment"># odd：3列 | even：4列</span></span><br><span class="line">  <span class="attr">row:</span> <span class="number">1</span> <span class="comment">#显示行数，默认两行，超过行数切换为滚动显示</span></span><br><span class="line">  <span class="attr">message:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">descr:</span> <span class="string">大学学习史</span></span><br><span class="line">      <span class="attr">cover:</span> <span class="string">https://cdn.cbd.int/akilar-candyassets@1.0.36/image/cover1.webp</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">descr:</span> <span class="string">前端成长历程</span></span><br><span class="line">      <span class="attr">cover:</span> <span class="string">https://cdn.cbd.int/akilar-candyassets@1.0.36/image/cover2.webp</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">descr:</span> <span class="string">生活欢乐多</span></span><br><span class="line">      <span class="attr">cover:</span> <span class="string">https://cdn.cbd.int/akilar-candyassets@1.0.36/image/cover3.webp</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">descr:</span></span><br><span class="line">      <span class="attr">cover:</span> <span class="string">https://cdn.cbd.int/akilar-candyassets@1.0.36/image/cover4.webp</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">descr:</span></span><br><span class="line">      <span class="attr">cover:</span> <span class="string">https://cdn.cbd.int/akilar-candyassets@1.0.36/image/cover5.webp</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">descr:</span></span><br><span class="line">      <span class="attr">cover:</span> <span class="string">https://cdn.cbd.int/akilar-candyassets@1.0.36/image/cover6.webp</span></span><br><span class="line">  <span class="attr">custom_css:</span> <span class="string">https://cdn.cbd.int/hexo-butterfly-categories-card@1.0.0/lib/categorybar.css</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>              </div>            </details><h3 id="文章列表"><a href="#文章列表" class="headerlink" title="文章列表"></a>文章列表</h3><details class="folding-tag" radio blue><summary> 点击查看 文章列表 </summary>              <div class='content'>              <p><img src="https://img01.anheyu.com/useruploads/215/2023/07/15/64b21f410db71.jpeg" alt=""></p>              </div>            </details><h3 id="实现-2"><a href="#实现-2" class="headerlink" title="实现"></a>实现</h3><p>&ensp;&ensp;&ensp;&ensp;Butterfly自带。</p><h3 id="音乐播放器"><a href="#音乐播放器" class="headerlink" title="音乐播放器"></a>音乐播放器</h3><p>&ensp;&ensp;&ensp;&ensp;左下角拉开可看。</p><details class="folding-tag" radio blue><summary> 点击查看 音乐列表 </summary>              <div class='content'>              <p><img src="https://img01.anheyu.com/useruploads/215/2023/07/15/64b224329207e.jpeg" alt=""></p>              </div>            </details><h3 id="实现-3"><a href="#实现-3" class="headerlink" title="实现"></a>实现</h3><details class="folding-tag" cyan red><summary> 查看实现方法 </summary>              <div class='content'>              <p><a href="https://www.bilibili.com/video/BV1rS4y1W78M/?p=8&amp;spm_id_from=pageDriver">教程</a></p>              </div>            </details><h3 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h3><p><img src="https://img01.anheyu.com/useruploads/215/2023/07/15/64b2243292224.jpeg" alt=""></p><p>可设置为文章阅读模式，夜间模式，宽屏模式，评论和回到顶部。</p><h3 id="实现-4"><a href="#实现-4" class="headerlink" title="实现"></a>实现</h3><p>&ensp;&ensp;&ensp;&ensp;Butterfly自带。</p><h2 id="文章页面布局"><a href="#文章页面布局" class="headerlink" title="文章页面布局"></a>文章页面布局</h2><p>由大标题、中标题、小标题、链接以及代码块、正文组成。</p><p><img src="https://img01.anheyu.com/useruploads/215/2023/07/15/64b221d47ca6b.png" alt=""></p><h3 id="版权说明"><a href="#版权说明" class="headerlink" title="版权说明"></a>版权说明</h3><details class="folding-tag" radio blue><summary> 点击查看 详情 </summary>              <div class='content'>              <p><img src="https://img01.anheyu.com/useruploads/215/2023/07/15/64b24a134e77d.jpeg" alt=""></p>              </div>            </details><h3 id="打赏功能"><a href="#打赏功能" class="headerlink" title="打赏功能"></a>打赏功能</h3><details class="folding-tag" radio blue><summary> 点击查看 详情 </summary>              <div class='content'>              <p><img src="https://img01.anheyu.com/useruploads/215/2023/07/15/64b24af2b8a42.jpeg" alt=""></p>              </div>            </details><h3 id="推荐文章模块"><a href="#推荐文章模块" class="headerlink" title="推荐文章模块"></a>推荐文章模块</h3><details class="folding-tag" radio blue><summary> 点击查看 详情 </summary>              <div class='content'>              <p><img src="https://img01.anheyu.com/useruploads/215/2023/07/15/64b24bd755647.jpeg" alt=""></p>              </div>            </details><h3 id="文章侧边栏"><a href="#文章侧边栏" class="headerlink" title="文章侧边栏"></a>文章侧边栏</h3><details class="folding-tag" radio blue><summary> 点击查看 文章详页面 </summary>              <div class='content'>              <p><img src="https://img01.anheyu.com/useruploads/215/2023/07/15/64b24c1fe2f96.jpeg" alt=""></p><p><img src="https://img01.anheyu.com/useruploads/215/2023/07/15/64b24c229331f.jpeg" alt=""></p>              </div>            </details><h3 id="实现-5"><a href="#实现-5" class="headerlink" title="实现"></a>实现</h3><details class="folding-tag" cyan red><summary> 查看实现方法 </summary>              <div class='content'>              <p><a href="https://blog.anheyu.com/posts/sdxhu.html">教程</a></p>              </div>            </details><h2 id="主页侧边栏"><a href="#主页侧边栏" class="headerlink" title="主页侧边栏"></a>主页侧边栏</h2><h3 id="个人简介"><a href="#个人简介" class="headerlink" title="个人简介"></a>个人简介</h3><details class="folding-tag" radio blue><summary> 点击查看 文章详页面 </summary>              <div class='content'>              <p><img src="https://img01.anheyu.com/useruploads/215/2023/07/15/64b244817c4b7.jpeg" alt=""></p>              </div>            </details><h3 id="网站公告"><a href="#网站公告" class="headerlink" title="网站公告"></a>网站公告</h3><details class="folding-tag" radio blue><summary> 点击查看 网站公告 </summary>              <div class='content'>              <p><img src="https://img01.anheyu.com/useruploads/215/2023/07/15/64b2465e96602.jpeg" alt=""></p>              </div>            </details><h3 id="电子钟"><a href="#电子钟" class="headerlink" title="电子钟"></a>电子钟</h3><details class="folding-tag" radio blue><summary> 点击查看 电子钟 </summary>              <div class='content'>              <p><img src="https://img01.anheyu.com/useruploads/215/2023/07/15/64b24481795ed.jpeg" alt=""></p>              </div>            </details><details class="folding-tag" cyan red><summary> 查看实现方法 </summary>              <div class='content'>              <p><a href="https://www.bilibili.com/video/BV1MB4y147FW/?spm_id_from=333.788&amp;vd_source=d53236894d2dc00540b94b714b873614">电子钟配置</a></p>              </div>            </details><h3 id="分类标签归档"><a href="#分类标签归档" class="headerlink" title="分类标签归档"></a>分类标签归档</h3><details class="folding-tag" radio blue><summary> 点击查看 详情 </summary>              <div class='content'>              <p><img src="https://img01.anheyu.com/useruploads/215/2023/07/15/64b247dab497d.jpeg" alt=""></p>              </div>            </details><h3 id="网站咨询"><a href="#网站咨询" class="headerlink" title="网站咨询"></a>网站咨询</h3><details class="folding-tag" radio blue><summary> 点击查看 详情 </summary>              <div class='content'>              <p><img src="https://img01.anheyu.com/useruploads/215/2023/07/15/64b244817ab6c.jpeg" alt=""></p>              </div>            </details><h3 id="实现-6"><a href="#实现-6" class="headerlink" title="实现"></a>实现</h3><details class="folding-tag" cyan red><summary> 查看实现方法 </summary>              <div class='content'>              <p><a href="https://blog.anheyu.com/posts/sdxhu.html">教程</a></p>              </div>            </details><h1 id="涉及技术"><a href="#涉及技术" class="headerlink" title="涉及技术"></a>涉及技术</h1><div class='checkbox blue'><input type="radio" />            <p>博客框架：<a href="https://github.com/hexojs/hexo">Hexo 6.3.0</a></p>            </div> <div class='checkbox blue'><input type="radio" />            <p>主题：<a href="https://butterfly.js.org/">Butterfly 4.3.1</a></p>            </div> <div class='checkbox blue'><input type="radio" />            <p>评论系统：<a href="https://twikoo.js.org/">valine</a>系统</p>            </div> <div class='checkbox blue'><input type="radio" />            <p>图床：<a href="https://bitiful.dogecast.com/buckets">安知鱼图床</a></p>            </div> <div class='checkbox blue'><input type="radio" />            <p>开发语言：HTML5 + CSS3 + JavaScript + Pug + YML</p>            </div> <h2 id="GitHub-Actions"><a href="#GitHub-Actions" class="headerlink" title="GitHub Actions"></a>GitHub Actions</h2><p>&ensp;&ensp;&ensp;&ensp;是一种在 GitHub 上自动化、定制和执行软件开发工作流程的功能。它可以帮助你在不同的事件（例如代码提交、拉取请求或标签创建）上触发不同的任务（例如构建、测试或部署）。</p><h2 id="GitHub-Page"><a href="#GitHub-Page" class="headerlink" title="GitHub Page"></a>GitHub Page</h2><p>&ensp;&ensp;&ensp;&ensp;是GitHub提供的静态网页托管服务，它允许用户通过GitHub仓库来托管和发布自己的静态网页。</p><h1 id="博客制作过程中遇到的问题及其解决方法"><a href="#博客制作过程中遇到的问题及其解决方法" class="headerlink" title="博客制作过程中遇到的问题及其解决方法"></a>博客制作过程中遇到的问题及其解决方法</h1><h2 id="问题1"><a href="#问题1" class="headerlink" title="问题1"></a>问题1</h2><p>&ensp;&ensp;&ensp;&ensp;将基于hexo的博客部署到github的时候出现了下面Error: Spawn failed的错误。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">fatal: Could not <span class="built_in">read</span> from remote repository.</span><br><span class="line"></span><br><span class="line">Please make sure you have the correct access rights</span><br><span class="line">and the repository exists.</span><br><span class="line">FATAL Something<span class="string">&#x27;s wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html</span></span><br><span class="line"><span class="string">Errors Spawn failed</span></span><br><span class="line"><span class="string">    at ChildProcess,&lt;anonymous&gt; (/Users/quinn/Desktop/Blog/node_1/lib/spawn js:51:21)</span></span><br><span class="line"><span class="string">    at ChildProcess,emit (node;events:513:28)</span></span><br><span class="line"><span class="string">    at ChildProcess,_handle,onexit(node:internal/child_process:291:12)</span></span><br></pre></td></tr></table></figure><h3 id="查找问题"><a href="#查找问题" class="headerlink" title="查找问题"></a>查找问题</h3><p>&ensp;&ensp;&ensp;&ensp;根据报错信息，可能出现以下问题导致无法从远程仓库读取或发生生成错误：</p><ol><li>访问权限问题：没具有正确的访问权限来读取远程仓库。私有仓库在终端中配置的用户名、密码、SSH 密钥或访问令牌是。</li><li>网络连接问题：报错中的 “Spawn failed” 可能是由于网络连接问题导致无法与远程仓库进行通信。请检查你的网络连接，并确保可以访问远程仓库的服务器。</li></ol><h3 id="解决措施"><a href="#解决措施" class="headerlink" title="解决措施"></a>解决措施</h3><ol><li><p>按照以下步骤重新添加ssh密钥</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;****&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;****&quot;</span></span><br></pre></td></tr></table></figure><p>按动三次回车出现下列类似显示</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">The key fingerprint is:</span><br><span class="line">SHA256:CLLFyI7onqV2mDS9KRs3vKM1DgdUEyCYhwLM257sH1g 29****39@qq.com</span><br><span class="line">The key<span class="string">&#x27;s randomart image is:</span></span><br><span class="line"><span class="string">+---[RSA 4096]----+</span></span><br><span class="line"><span class="string">|B+.+.            |</span></span><br><span class="line"><span class="string">|*+oo.            |</span></span><br><span class="line"><span class="string">|.o* +            |</span></span><br><span class="line"><span class="string">|o+ = . .         |</span></span><br><span class="line"><span class="string">|o.* .E. S        |</span></span><br><span class="line"><span class="string">|.oo=o            |</span></span><br><span class="line"><span class="string">|.+=Xo.           |</span></span><br><span class="line"><span class="string">|.=@*+ .          |</span></span><br><span class="line"><span class="string">|.*=oo.           |</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">————————————————</span></span><br></pre></td></tr></table></figure><p>生成一对密钥和公钥，id_rsa 和 id_rsa.pub，其中 id_rsa 为私钥，id_rsa.pub 为公钥，复制公钥上传至github上重新认证无效。</p></li><li><p>检查网络连接，使用surge的网络增强模式访问远程仓库，成功。</p></li></ol><h2 id="问题2"><a href="#问题2" class="headerlink" title="问题2"></a>问题2</h2><p>&ensp;&ensp;&ensp;&ensp;&ensp;在运行”hexo clean +hexo generate +hexo serve”命令后，出现ERROR输出一堆地址报错。</p><p><img src="https://img01.anheyu.com/useruploads/215/2023/07/17/64b419ca16e4a.png" alt=""></p><h3 id="查找问题-1"><a href="#查找问题-1" class="headerlink" title="查找问题"></a>查找问题</h3><p>&ensp;&ensp;&ensp;&ensp;由于报错的文件路径我从未打开过并且代码正确，我从以下几个方面进行查找：</p><ol><li>插件冲突：在Hexo中使用了多个插件，可能会发生插件之间的冲突或不兼容性。尝试禁用一些插件，然后逐个启用它们，以确定哪个插件引起了问题。</li><li>环境配置问题：是否安装了正确版本的Node.js和Hexo，并且环境配置正确。检查Node.js版本是否与Hexo兼容，并确保已正确安装Hexo的依赖包。</li></ol><h2 id="解决措施-1"><a href="#解决措施-1" class="headerlink" title="解决措施"></a>解决措施</h2><p>&ensp;&ensp;&ensp;&ensp;在经过配置文件代码的阅读，我注意到在我的博客配置文件中，有一些插件的启用选项被设置为”enable: true”，然而，在实际安装的插件列表中，并没有找到对应的插件安装记录。这导致在运行三件套命令时出现了一系列的错误输出。</p><p>按照以下步骤操作：</p><ol><li>检查插件列表：运行命令”hexo list”，查看已安装的插件列表。</li><li>查找缺失的插件：在输出的列表中查找与配置文件中启用但未安装的插件对应的条目。</li><li>安装缺失的插件：使用命令”npm install 插件名称 —save”，安装缺失的插件。确保在命令中替换”插件名称”为实际插件的名称。</li><li>验证安装：运行命令”hexo clean + hexo generate + hexo serve”，检查是否仍然存在插件缺失的错误输出。如果没有出现错误，则表示插件安装成功。</li><li>配置文件检查：在修改配置文件时，请确保只启用已正确安装的插件，并仔细检查每个插件的安装状态。</li></ol><h2 id="问题3"><a href="#问题3" class="headerlink" title="问题3"></a>问题3</h2><p>&ensp;&ensp;&ensp;&ensp;hexo安装音乐、追番页、live2d看板娘安装这里在hexo g的时候出现了以下报错:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">TypeError: Cannot <span class="built_in">read</span> properties of undefined (reading <span class="string">&#x27;count&#x27;</span>)</span><br><span class="line">    at module.exports (C:\Users\Chen\OneDrive\Digital Garden\node_modules\hexo-baidu-url-submit\lib\generator.js:4:41)</span><br></pre></td></tr></table></figure><h3 id="查找问题-2"><a href="#查找问题-2" class="headerlink" title="查找问题"></a>查找问题</h3><p>&ensp;&ensp;&ensp;&ensp;该报错与”hexo-baidu-url-submit”插件相关。该插件用于将博客链接自动推送给百度搜索引擎。部署器未找到该插件。</p><h3 id="解决措施-2"><a href="#解决措施-2" class="headerlink" title="解决措施"></a>解决措施</h3><p>&ensp;&ensp;&ensp;解决该问题的方法是卸载”hexo-baidu-url-submit”插件。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm remove hexo-baidu-url-submit</span><br></pre></td></tr></table></figure><p>&ensp;&ensp;&ensp;&ensp;卸载后，再次运行”hexo g”命令，不会再出现报错。可以继续安装音乐、追番页和live2d看板娘功能了。</p><h1 id="个人总结"><a href="#个人总结" class="headerlink" title="个人总结"></a>个人总结</h1><p>&ensp;&ensp;&ensp;&ensp;遇到乱码报错时，我学到了排除错误的一些常见方法。</p><ul><li><p>首先，确保字符编码设置正确，这是解决乱码问题的第一步。</p></li><li><p>其次，检查文件是否损坏，并尝试删除缓存文件来清除可能的问题。</p></li><li><p>另外，保持Hexo和插件的版本更新也很重要，以确保兼容性。</p></li><li><p>如果问题仍然存在，重新初始化Hexo项目可能是最后的解决办法。</p><p>这个经验教训让我更加注重格式正确，终端和项目文件的完整性，并且需要记录每一步的操作过程，以避免类似的问题。</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="研究生" scheme="http://wangqianyu6.github.io/categories/%E7%A0%94%E7%A9%B6%E7%94%9F/"/>
    
    
    <category term="生活" scheme="http://wangqianyu6.github.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>五一上海之旅✈️</title>
    <link href="http://wangqianyu6.github.io/posts/5149739a.html"/>
    <id>http://wangqianyu6.github.io/posts/5149739a.html</id>
    <published>2023-05-01T04:25:40.000Z</published>
    <updated>2023-07-13T03:51:20.655Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="五一上海之旅"><a href="#五一上海之旅" class="headerlink" title="五一上海之旅"></a>五一上海之旅</h1><h2 id="我❤️上海～"><a href="#我❤️上海～" class="headerlink" title="我❤️上海～"></a>我❤️上海～</h2><p>时间仓促！可惜没去上海的大学看看😭特别是华师大</p><h2 id="【关于交通】"><a href="#【关于交通】" class="headerlink" title="【关于交通】"></a>【关于交通】</h2><h3 id="🔹杭州东站出发上海虹桥站～"><a href="#🔹杭州东站出发上海虹桥站～" class="headerlink" title="🔹杭州东站出发上海虹桥站～"></a>🔹杭州东站出发上海虹桥站～</h3><h3 id="🔹市内交通："><a href="#🔹市内交通：" class="headerlink" title="🔹市内交通："></a>🔹市内交通：</h3><p>可以坐公交🚌、地铁🚇、出租，地铁特别不人性化（指示灯非常难看，外地人太不友好啦</p><h2 id="【必打卡景点】"><a href="#【必打卡景点】" class="headerlink" title="【必打卡景点】"></a>【必打卡景点】</h2><h3 id="🔸外滩："><a href="#🔸外滩：" class="headerlink" title="🔸外滩："></a>🔸外滩：</h3><p>在外滩可以感受到大上海的繁华，南京路的高楼足以让我们停驻于此，还有和平饭店，在外滩看东方明珠真的美，真的繁华🌸</p><p><img src="https://img01.anheyu.com/useruploads/215/2023/07/13/64aee5fdad153.jpeg" alt="在这里插入图片描述"></p><p><img src="https://img01.anheyu.com/useruploads/215/2023/07/13/64aee710a5f99.jpeg" alt="在这里插入图片描述"></p><p><img src="https://img01.anheyu.com/useruploads/215/2023/07/13/64aee6ada0837.jpeg" alt="在这里插入图片描述"></p><h3 id="🔸田子坊："><a href="#🔸田子坊：" class="headerlink" title="🔸田子坊："></a>🔸田子坊：</h3><p>像北京798，田子坊有很多的设计室、画家工作室等其实一般，比较商业化。</p><p><img src="https://img01.anheyu.com/useruploads/215/2023/07/13/64aee855266fc.jpeg" alt=""></p><p><img src="https://img01.anheyu.com/useruploads/215/2023/07/13/64aee6fa02bc9.jpeg" alt="在这里插入图片描述"></p><h3 id="🔸上海博物馆："><a href="#🔸上海博物馆：" class="headerlink" title="🔸上海博物馆："></a>🔸上海博物馆：</h3><p>去一座城市一定要去趟博物馆，去感受这座城市的历史与风貌，上海博物馆还是值得去看</p><h3 id="🔸黄浦江夜游："><a href="#🔸黄浦江夜游：" class="headerlink" title="🔸黄浦江夜游："></a>🔸黄浦江夜游：</h3><p>比较推荐，提前预定的，江风吹拂，两岸繁华的景象，太美了🌉</p><h2 id="【关于美食】"><a href="#【关于美食】" class="headerlink" title="【关于美食】"></a>【关于美食】</h2><h3 id="▪️蟹黄面、蟹黄饭："><a href="#▪️蟹黄面、蟹黄饭：" class="headerlink" title="▪️蟹黄面、蟹黄饭："></a>▪️蟹黄面、蟹黄饭：</h3><p>强烈推荐，超好吃，配上熏鱼，可以炫几碗🍜</p><h3 id="▪️上海生煎："><a href="#▪️上海生煎：" class="headerlink" title="▪️上海生煎："></a>▪️上海生煎：</h3><p>外皮金黄，有芝麻，很香，肉馅很嫩，味道还可以</p><p><img src="https://img01.anheyu.com/useruploads/215/2023/07/13/64aee8551b135.jpeg" alt=""></p><h3 id="▪️蝴蝶酥！"><a href="#▪️蝴蝶酥！" class="headerlink" title="▪️蝴蝶酥！"></a>▪️蝴蝶酥！</h3><p><img src="https://img01.anheyu.com/useruploads/215/2023/07/13/64aee8551aeda.jpeg" alt=""></p><h2 id="【关于住宿】"><a href="#【关于住宿】" class="headerlink" title="【关于住宿】"></a>【关于住宿】</h2><p>🏠住在了延安路附近，如果是背包客也可以选择南京路附近的青旅，上海交通很方便.</p><p>我爱上海～                     </p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="生活" scheme="http://wangqianyu6.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="生活" scheme="http://wangqianyu6.github.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>2022牛客寒假算法基础集训营（六）全部题解</title>
    <link href="http://wangqianyu6.github.io/posts/c7be28a4.html"/>
    <id>http://wangqianyu6.github.io/posts/c7be28a4.html</id>
    <published>2022-04-20T03:55:40.000Z</published>
    <updated>2023-07-13T03:12:34.851Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="A-回文大师-哈希二分-kmp-【补】"><a href="#A-回文大师-哈希二分-kmp-【补】" class="headerlink" title="A    回文大师 哈希二分/kmp 【补】"></a>A    回文大师 哈希二分/kmp 【补】</h1><p><strong><a href="https://ac.nowcoder.com/acm/contest/23481/A">题目链接</a></strong></p><h2 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h2><p>翻译过来就是<br>求每一个前缀串 在原串的反串中有多少个相同的子串</p><h2 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h2><p>可以构造一个反串<br>枚举反串开始的位置 再二分去找最长的和原前缀匹配（哈希O1判断）的在原串的位置，这个位置之前的所有前缀 的ans都+1，最后答案用差分维护<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int unsigned long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e6</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> M=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> qwq=<span class="number">23333</span>;</span><br><span class="line"><span class="type">int</span> p[N];</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="type">int</span> ans[N];</span><br><span class="line"><span class="type">int</span> haa[N],hbb[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">get</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> hbb[b]-hbb[a<span class="number">-1</span>]*p[b-a+<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios_base::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);cin.<span class="built_in">tie</span>(<span class="number">0</span>);cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    p[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line">        p[i]=p[i<span class="number">-1</span>]*qwq;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line">        cin&gt;&gt;a[i];</span><br><span class="line">        haa[i]=haa[i<span class="number">-1</span>]*qwq+a[i];</span><br><span class="line">        hbb[n-i+<span class="number">1</span>]=hbb[n-i+<span class="number">1</span>+<span class="number">1</span>]*qwq+a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">reverse</span>(a+<span class="number">1</span>, a+<span class="number">1</span>+n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123; </span><br><span class="line">        hbb[i]=hbb[i<span class="number">-1</span>]*qwq+a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n; i++) &#123;</span><br><span class="line">        <span class="type">int</span> l=<span class="number">1</span>,r=n-i+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(l&lt;=r) &#123;</span><br><span class="line">            <span class="type">int</span> mid=(l+r)/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">get</span>(i, i+mid<span class="number">-1</span>)==haa[mid]) &#123;</span><br><span class="line">                l=mid+<span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> r=mid<span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ans[<span class="number">1</span>]++;</span><br><span class="line">        ans[l]--;<span class="comment">//求出来的是l==mid+1</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line">        ans[i]+=ans[i<span class="number">-1</span>];</span><br><span class="line">        cout&lt;&lt;ans[i]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="B-价值序列-计数"><a href="#B-价值序列-计数" class="headerlink" title="B    价值序列 计数"></a>B    价值序列 计数</h1><p><strong><a href="https://ac.nowcoder.com/acm/contest/23481/B">题目链接</a></strong></p><h2 id="题意：-1"><a href="#题意：-1" class="headerlink" title="题意："></a>题意：</h2><p><img src="https://img-blog.csdnimg.cn/803d68704df7458d99059c178b4d618e.png" alt="在这里插入图片描述"></p><h2 id="题解：-1"><a href="#题解：-1" class="headerlink" title="题解："></a>题解：</h2><p>删除一个数，价值必定不增<br>上升的序列和下降的序列之间的数 是可取可不取的 每一个数对答案的贡献是 2^(sum)<br>而波峰的那个值和波谷至少保留一个不然答案会减少 对答案的贡献是（2^sum)-1<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">2e7</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> M=<span class="number">998244353</span>; </span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span> &#123;</span><br><span class="line">    <span class="type">int</span> v, sum;</span><br><span class="line">&#125;b[N]; </span><br><span class="line"><span class="type">int</span> p[N],a[N];</span><br><span class="line"><span class="function">ll <span class="title">ksm</span><span class="params">(ll a,ll p)</span></span>&#123;ll res=<span class="number">1</span>;<span class="keyword">while</span>(p)&#123;<span class="keyword">if</span>(p&amp;<span class="number">1</span>)&#123;res=res*a%M;&#125;a=a*a%M;p&gt;&gt;=<span class="number">1</span>;&#125;<span class="keyword">return</span> res;&#125; </span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios_base::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);cin.<span class="built_in">tie</span>(<span class="number">0</span>);cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> t; cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--) &#123;</span><br><span class="line">        <span class="type">int</span> n; cin&gt;&gt;n;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line">            cin&gt;&gt;a[i];</span><br><span class="line">            b[i].sum=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">        b[++cnt].v=a[<span class="number">1</span>];b[cnt].sum=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>; i&lt;=n; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i]!=a[i<span class="number">-1</span>]) b[++cnt].v=a[i]; </span><br><span class="line">            b[cnt].sum++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> ans=<span class="number">1</span>; </span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>; i&lt;=cnt; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(i==cnt||i==<span class="number">1</span>)ans=(ans%M*(<span class="built_in">ksm</span>(<span class="number">2</span>, b[cnt].sum)<span class="number">-1</span>+M)%M)%M; </span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (b[i<span class="number">-1</span>].v&lt;b[i].v&amp;&amp;b[i].v&lt;b[i+<span class="number">1</span>].v||b[i<span class="number">-1</span>].v&gt;b[i].v&amp;&amp;b[i].v&gt;b[i+<span class="number">1</span>].v) &#123;</span><br><span class="line">                ans=(ans%M*(<span class="built_in">ksm</span>(<span class="number">2</span>, b[i].sum)+M)%M)%M; </span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                ans=(ans%M*(<span class="built_in">ksm</span>(<span class="number">2</span>, b[i].sum)<span class="number">-1</span>+M)%M)%M; </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        ans%=M; </span><br><span class="line">        cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="C-数组划分-栈-并查集-【补】"><a href="#C-数组划分-栈-并查集-【补】" class="headerlink" title="C    数组划分 栈/并查集 【补】"></a>C    数组划分 栈/并查集 【补】</h1><p><strong><a href="https://ac.nowcoder.com/acm/contest/23481/C">题目链接</a></strong></p><h2 id="题意：-2"><a href="#题意：-2" class="headerlink" title="题意："></a>题意：</h2><p><img src="https://img-blog.csdnimg.cn/500e1b81e48a487a870f6b0f620dbaf9.png" alt="在这里插入图片描述"><br>求某个区间的有几个子数组的每个前缀和都大于等于0 且划分的数组尽量少</p><h2 id="题解：-2"><a href="#题解：-2" class="headerlink" title="题解："></a>题解：</h2><p>从每个位置（记为l），出发去找第一个 $sum[r]-sum[l-1]<0$ 的 r 位置，题目里 r 是不包含的，这个 $[l, r)$ 就是最大的满足所有前缀和都大于等于 $0$ 的划分区间就是对于每个 $l$ 去找第一个 $sum[r]<sum[l-1]$ 的 r前缀和sum=5 1 3 8 7 6一开始 6i=6时 6 7i=5时 6 7 8 保留这些值是因为前面可能出现 7 也有可能出现 9，7的第一个最小的是6 而9的第一个小于的是8i=4时 3i=3时 1i=2时 1 5 所以我们用单调栈维护每个i对应的r，从右向左循环，若sumi<栈顶元素，那么栈顶元素不能成为左边的第一个小于就弹出，每i次栈内都是这个元素x划分的下一个位置 $fx$ 和 下一个位置 $f(fx)$ 和下一个位置 $f(f(fx))$，刚好是对 $i$ 来说到 $n$ 的划分的区间个数且是单调递减的 这样我们维护值改为维护下标 那么当枚举到题目要求查询的 $l$ 我们就可以二分去找 最后一个小于$r$的下标 $mid$ 答案就等于 $cnt-mid+1$  <figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">5e6</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> M=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> qwq=<span class="number">23333</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> BufferSize=<span class="number">1</span>&lt;&lt;<span class="number">16</span>;</span><br><span class="line"><span class="type">char</span> buffer[BufferSize],*head,*tail;</span><br><span class="line"><span class="keyword">inline</span> <span class="type">char</span> <span class="title function_">Getchar</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>(head==tail) &#123;</span><br><span class="line">        <span class="type">int</span> l=fread(buffer,<span class="number">1</span>,BufferSize,<span class="built_in">stdin</span>);</span><br><span class="line">        tail=(head=buffer)+l;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> *head++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">inline</span> <span class="type">int</span> <span class="title function_">read</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;<span class="type">char</span> c=Getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(c);c=Getchar()) <span class="keyword">if</span>(c==<span class="string">&#x27;-&#x27;</span>) f=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(c);c=Getchar()) x=x*<span class="number">10</span>+c-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">print</span><span class="params">(<span class="type">int</span> x)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>) print(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>|<span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> l[N], r[N];</span><br><span class="line"><span class="type">int</span> sum[N];</span><br><span class="line"><span class="type">int</span> ans[N];</span><br><span class="line"><span class="type">int</span> st[N];</span><br><span class="line"><span class="type">signed</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    ios_base::sync_with_stdio(<span class="literal">false</span>);<span class="built_in">cin</span>.tie(<span class="number">0</span>);<span class="built_in">cout</span>.tie(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    t=read();</span><br><span class="line">    <span class="keyword">while</span>(t--) &#123;</span><br><span class="line">        <span class="type">int</span> n, q;</span><br><span class="line">        n=read();</span><br><span class="line">        q=read();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line">            <span class="type">int</span> x=read();</span><br><span class="line">            sum[i]=sum[i<span class="number">-1</span>]+x;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=q; i++) &#123;</span><br><span class="line">            l[i]=read();</span><br><span class="line">            r[i]=read();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> m=q;</span><br><span class="line">        <span class="type">int</span> cnt=<span class="number">0</span>; </span><br><span class="line">        st[++cnt]=n;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=n; i&gt;=<span class="number">1</span>; i--) &#123;</span><br><span class="line">            <span class="keyword">while</span>(cnt&amp;&amp;sum[st[cnt]]&gt;=sum[i<span class="number">-1</span>]) &#123;</span><br><span class="line">                cnt--;</span><br><span class="line">            &#125;</span><br><span class="line">            st[++cnt]=i<span class="number">-1</span>;</span><br><span class="line">            <span class="keyword">while</span>(m&amp;&amp;l[m]==i) &#123;</span><br><span class="line">                <span class="type">int</span> ll=<span class="number">1</span>, rr=cnt;</span><br><span class="line">                <span class="keyword">while</span>(ll&lt;rr)&#123;</span><br><span class="line">                    <span class="type">int</span> mid=ll+rr&gt;&gt;<span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">if</span>(st[mid]&lt;r[m])rr=mid;</span><br><span class="line">                    <span class="keyword">else</span> ll=mid+<span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                ans[m]=cnt-(ll)+<span class="number">1</span>;</span><br><span class="line">                m--;</span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=q; i++) &#123;</span><br><span class="line">            print(ans[i]);</span><br><span class="line">            <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="D-删除子序列-计数"><a href="#D-删除子序列-计数" class="headerlink" title="D    删除子序列 计数"></a>D    删除子序列 计数</h1><p><strong><a href="https://ac.nowcoder.com/acm/contest/23481/D">题目链接</a></strong></p><h2 id="题意：-3"><a href="#题意：-3" class="headerlink" title="题意："></a>题意：</h2><p><img src="https://img-blog.csdnimg.cn/9a32495f4a0b435199cb212db9e6b30c.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAcXVpbm4xOA==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><h2 id="题解：-3"><a href="#题解：-3" class="headerlink" title="题解："></a>题解：</h2><p>因为T字符串没重复的字符 那么从后往前循环找 这个字符的后一个字母有没有<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">2e6</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> M=<span class="number">998244353</span>;</span><br><span class="line"><span class="type">int</span> a[N], b[N],sum[N];</span><br><span class="line"><span class="type">signed</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    ios_base::sync_with_stdio(<span class="literal">false</span>);<span class="built_in">cin</span>.tie(<span class="number">0</span>);<span class="built_in">cout</span>.tie(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--) &#123;</span><br><span class="line">        <span class="type">int</span> n, m;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">        <span class="built_in">string</span> s;</span><br><span class="line">        <span class="built_in">string</span> t; </span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;s&gt;&gt;t;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">26</span>; i++) sum[i]=<span class="number">0</span>; </span><br><span class="line">        <span class="built_in">map</span>&lt;<span class="type">char</span>, <span class="type">char</span>&gt; mp;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>; i&lt;m<span class="number">-1</span>; i++) mp[t[i]]=t[i+<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=n<span class="number">-1</span>; i&gt;=<span class="number">0</span>; i--) &#123;</span><br><span class="line">            <span class="keyword">if</span>(s[i]==t[m<span class="number">-1</span>]) &#123;</span><br><span class="line">                sum[s[i]-<span class="string">&#x27;a&#x27;</span>+<span class="number">1</span>]++;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123; </span><br><span class="line">                 <span class="keyword">if</span>(sum[mp[s[i]]-<span class="string">&#x27;a&#x27;</span>+<span class="number">1</span>]) &#123;</span><br><span class="line">                    sum[mp[s[i]]-<span class="string">&#x27;a&#x27;</span>+<span class="number">1</span>]--;</span><br><span class="line">                    sum[s[i]-<span class="string">&#x27;a&#x27;</span>+<span class="number">1</span>]++;</span><br><span class="line">                &#125; </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;sum[t[<span class="number">0</span>]-<span class="string">&#x27;a&#x27;</span>+<span class="number">1</span>]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><h1 id="E-骑士-贪心"><a href="#E-骑士-贪心" class="headerlink" title="E    骑士 贪心"></a>E    骑士 贪心</h1><p><strong><a href="https://ac.nowcoder.com/acm/contest/23481/E">题目链接</a></strong></p><h2 id="题意：-4"><a href="#题意：-4" class="headerlink" title="题意："></a>题意：</h2><h2 id="题解：-4"><a href="#题解：-4" class="headerlink" title="题解："></a>题解：</h2><p>找最大值<br>对于最大的那个人只要能打过第二大的<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">2e6</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> M=<span class="number">998244353</span>;</span><br><span class="line"><span class="type">int</span> a[N], b[N], h[N];</span><br><span class="line"><span class="type">signed</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    ios_base::sync_with_stdio(<span class="literal">false</span>);<span class="built_in">cin</span>.tie(<span class="number">0</span>);<span class="built_in">cout</span>.tie(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--) &#123;</span><br><span class="line">            <span class="type">int</span> n;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">            <span class="type">int</span> maxx=<span class="number">0</span>, p=<span class="number">0</span>, ma2=<span class="number">0</span>, p2=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span> ;i&lt;=n; i++) &#123;</span><br><span class="line">                <span class="built_in">cin</span>&gt;&gt;a[i]&gt;&gt;b[i]&gt;&gt;h[i]; </span><br><span class="line">                <span class="keyword">if</span>(maxx&lt;=a[i]) maxx=max(maxx,a[i]),p=i;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span> ;i&lt;=n; i++) &#123; </span><br><span class="line">                <span class="keyword">if</span>(ma2&lt;=a[i]&amp;&amp;p!=i) ma2=max(ma2,a[i]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(i!=p) ans+=max(<span class="number">0ll</span>, maxx-b[i]-h[i]+<span class="number">1</span>);</span><br><span class="line">                <span class="keyword">else</span> ans+=max(<span class="number">0ll</span>, ma2-b[i]-h[i]+<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><h1 id="F-串-分类讨论"><a href="#F-串-分类讨论" class="headerlink" title="F    +-串 分类讨论"></a>F    +-串 分类讨论</h1><p><strong><a href="https://ac.nowcoder.com/acm/contest/23481/F">题目链接</a></strong></p><h2 id="题意：-5"><a href="#题意：-5" class="headerlink" title="题意："></a>题意：</h2><p>一串+-的式子，+是+1，-是-1，可以改变符号k次使得算是绝对值最小</p><h2 id="题解：-5"><a href="#题解：-5" class="headerlink" title="题解："></a>题解：</h2><p><img src="https://img-blog.csdnimg.cn/da47e046c3504efbaa7fee7025fc199b.png" alt="在这里插入图片描述"></p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">2e6</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> M=<span class="number">998244353</span>;</span><br><span class="line"><span class="type">signed</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--) &#123;</span><br><span class="line">        <span class="built_in">string</span> s;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;s;</span><br><span class="line">        <span class="type">int</span> k;<span class="built_in">cin</span>&gt;&gt;k;</span><br><span class="line">        <span class="type">int</span> m=s.size();</span><br><span class="line">        <span class="type">int</span> a=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;m; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(s[i]==<span class="string">&#x27;+&#x27;</span>) a++; </span><br><span class="line">            <span class="keyword">else</span> a--;</span><br><span class="line">        &#125;</span><br><span class="line">        a=<span class="built_in">abs</span>(a); </span><br><span class="line">        <span class="keyword">if</span>(k&lt;=a/<span class="number">2</span>) <span class="built_in">cout</span>&lt;&lt;a-k*<span class="number">2</span>&lt;&lt;<span class="built_in">endl</span>;<span class="comment">//a=6 k=1 ans=4</span></span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            k-=a/<span class="number">2</span>;</span><br><span class="line">            a%=<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>(a) <span class="built_in">cout</span>&lt;&lt;<span class="number">1</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(k%<span class="number">2</span>==<span class="number">0</span>)<span class="built_in">cout</span>&lt;&lt;<span class="number">0</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;<span class="number">2</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="G-迷宫2-思维-最短路-【补】"><a href="#G-迷宫2-思维-最短路-【补】" class="headerlink" title="G    迷宫2 思维+最短路 【补】"></a>G    迷宫2 思维+最短路 【补】</h1><p><strong><a href="https://ac.nowcoder.com/acm/contest/23481/G">题目链接</a></strong></p><h2 id="题意：-6"><a href="#题意：-6" class="headerlink" title="题意："></a>题意：</h2><p><img src="https://img-blog.csdnimg.cn/dba198a67c9d4073b74758c176de6fde.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAcXVpbm4xOA==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><h2 id="题解：-6"><a href="#题解：-6" class="headerlink" title="题解："></a>题解：</h2><p>随便你改一定有一条从$(1,1)$到$(n,m)$的路，对于每个点修改就要代价就为1 不修改代价就为0<br>于是问题变为找$(1,1)$到$(n,m)$的最短路径，对于点$(x,y)$，如果 $Cxy==L$，则 $(x,y)$ 到 $(x,y-1)$的花费为 $0$，到其它三个方向的花费为 $1$。</p><p>看错范围n，m&lt;=1000，拿map当二维数组然后t死了<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1005</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> M=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="built_in">string</span> maze[N];</span><br><span class="line"><span class="type">bool</span> is[N][N];</span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line"><span class="type">int</span> t;</span><br><span class="line"><span class="type">int</span> dir[<span class="number">4</span>][<span class="number">2</span>]=&#123;&#123;<span class="number">1</span>,<span class="number">0</span>&#125;,&#123;<span class="number">-1</span>,<span class="number">0</span>&#125;, &#123;<span class="number">0</span>, <span class="number">1</span>&#125;, &#123;<span class="number">0</span>,<span class="number">-1</span>&#125;&#125;;</span><br><span class="line"><span class="type">bool</span> <span class="title function_">in</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>&lt;=x&amp;&amp;x&lt;=n&amp;&amp;<span class="number">1</span>&lt;=y&amp;&amp;y&lt;=m;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="type">int</span> x, y, d;</span><br><span class="line">    <span class="type">bool</span> operator &lt;(<span class="type">const</span> node&amp;rhs) <span class="type">const</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> d&gt;rhs.d;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node1</span>&#123;</span></span><br><span class="line">    <span class="type">int</span> x, y;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">int</span> dis[N][N];</span><br><span class="line">node1 pre[N][N];</span><br><span class="line"><span class="built_in">priority_queue</span>&lt;node&gt; q;</span><br><span class="line"><span class="type">int</span> <span class="title function_">dij</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">while</span>(q.size()) q.pop();</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>; j&lt;=m; j++) &#123;</span><br><span class="line">            dis[i][j]=<span class="number">1e18</span>, is[i][j]=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    dis[<span class="number">1</span>][<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">    q.push(&#123;<span class="number">1</span>,<span class="number">1</span>, <span class="number">0</span>&#125;);</span><br><span class="line">    <span class="keyword">while</span>(!q.empty()) &#123;</span><br><span class="line">        node now=q.top();</span><br><span class="line">        q.pop(); </span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;<span class="number">4</span>; i++) &#123;</span><br><span class="line">            <span class="type">int</span> x=now.x+dir[i][<span class="number">0</span>];</span><br><span class="line">            <span class="type">int</span> y=now.y+dir[i][<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">if</span>(in(x, y)) &#123;</span><br><span class="line">                <span class="keyword">if</span>(maze[now.x][now.y]==<span class="string">&#x27;U&#x27;</span>&amp;&amp;i==<span class="number">1</span>||maze[now.x][now.y]==<span class="string">&#x27;D&#x27;</span>&amp;&amp;i==<span class="number">0</span>||maze[now.x][now.y]==<span class="string">&#x27;L&#x27;</span>&amp;&amp;i==<span class="number">3</span>||maze[now.x][now.y]==<span class="string">&#x27;R&#x27;</span>&amp;&amp;i==<span class="number">2</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span>(dis[x][y]&gt;now.d) &#123;</span><br><span class="line">                        dis[x][y]=now.d;</span><br><span class="line">                        pre[x][y]=&#123;now.x, now.y&#125;;</span><br><span class="line">                        q.push(&#123;x,y,now.d&#125;);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;<span class="keyword">else</span>  &#123;</span><br><span class="line">                    <span class="keyword">if</span>(dis[x][y]&gt;now.d+<span class="number">1</span>) &#123;</span><br><span class="line">                        pre[x][y]=&#123;now.x, now.y&#125;;</span><br><span class="line">                        dis[x][y]=now.d+<span class="number">1</span>;</span><br><span class="line">                        q.push(&#123;x,y,now.d+<span class="number">1</span>&#125;);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> dis[n][m];</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">signed</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    ios_base::sync_with_stdio(<span class="literal">false</span>);<span class="built_in">cin</span>.tie(<span class="number">0</span>);<span class="built_in">cout</span>.tie(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--) &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;maze[i];</span><br><span class="line">            maze[i]=<span class="string">&#x27;.&#x27;</span>+maze[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(n==m&amp;&amp;n==<span class="number">1</span>) &#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="number">0</span>&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;dij()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">while</span>(<span class="number">1</span>) &#123;</span><br><span class="line">            <span class="type">int</span> x=pre[n][m].x;</span><br><span class="line">            <span class="type">int</span> y=pre[n][m].y;</span><br><span class="line">            <span class="keyword">if</span>((n-x)==<span class="number">1</span>&amp;&amp;(m-y)==<span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span>(maze[x][y]!=<span class="string">&#x27;D&#x27;</span>) <span class="built_in">cout</span>&lt;&lt;x&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;y&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;<span class="string">&quot;D&quot;</span>&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>((n-x)==<span class="number">-1</span>&amp;&amp;(m-y)==<span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span>(maze[x][y]!=<span class="string">&#x27;U&#x27;</span>) <span class="built_in">cout</span>&lt;&lt;x&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;y&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;<span class="string">&quot;U&quot;</span>&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>((n-x)==<span class="number">0</span>&amp;&amp;(m-y)==<span class="number">-1</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span>(maze[x][y]!=<span class="string">&#x27;L&#x27;</span>) <span class="built_in">cout</span>&lt;&lt;x&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;y&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;<span class="string">&quot;L&quot;</span>&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>((n-x)==<span class="number">0</span>&amp;&amp;(m-y)==<span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span>(maze[x][y]!=<span class="string">&#x27;R&#x27;</span>)  <span class="built_in">cout</span>&lt;&lt;x&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;y&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;<span class="string">&quot;R&quot;</span>&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            n=x, m=y;</span><br><span class="line">            <span class="keyword">if</span>(x==<span class="number">1</span>&amp;&amp;y==<span class="number">1</span>) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><h1 id="H-寒冬信使2-博弈【补】"><a href="#H-寒冬信使2-博弈【补】" class="headerlink" title="H    寒冬信使2 博弈【补】"></a>H    寒冬信使2 博弈【补】</h1><p><strong><a href="https://ac.nowcoder.com/acm/contest/23481/H">题目链接</a></strong></p><h2 id="题意：-7"><a href="#题意：-7" class="headerlink" title="题意："></a>题意：</h2><p><img src="https://img-blog.csdnimg.cn/0baebda66f6d4862a09b8595ec86d57a.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAcXVpbm4xOA==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><h2 id="题解：-7"><a href="#题解：-7" class="headerlink" title="题解："></a>题解：</h2><p>n很小<br>所以所有状态可以状态压缩存起来<br>当前状态如果在一次操作后变成了一个必败态，那么当前状态就是先手必胜<br>假如一个状态经过一次操作怎么都让对手赢那么当前状态就是先手必败<br>必败态是全黑 必胜态是两个白色或者第一个是白色</p><p>所以你每个状态只要找到他之前的状态里有一个必败 那么你这个状态就是必胜<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">8e7</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> M=<span class="number">998244353</span>;</span><br><span class="line"><span class="type">int</span> a[N], b[N], c[N];</span><br><span class="line"><span class="type">int</span> dp[<span class="number">1</span>&lt;&lt;<span class="number">14</span>];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    dp[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;(<span class="number">1</span>&lt;&lt;<span class="number">12</span>); i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>((i&amp;<span class="number">1</span>)&amp;&amp;!dp[i^<span class="number">1</span>]) &#123;</span><br><span class="line">            dp[i]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>; j&lt;=<span class="number">11</span>&amp;&amp;!dp[i]; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span>((<span class="number">1</span>&lt;&lt;j)&gt;i) <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">if</span>((i&amp;(<span class="number">1</span>&lt;&lt;j))==<span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">0</span>; k&lt;j; k++) &#123;</span><br><span class="line">                    <span class="keyword">if</span>(dp[(i^(<span class="number">1</span>&lt;&lt;j))^(<span class="number">1</span>&lt;&lt;k)]==<span class="number">0</span>) &#123;</span><br><span class="line">                        dp[i]=<span class="number">1</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios_base::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);cin.<span class="built_in">tie</span>(<span class="number">0</span>);cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">init</span>();</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--) &#123;</span><br><span class="line">        <span class="type">int</span> n;</span><br><span class="line">        cin&gt;&gt;n;</span><br><span class="line">        string s;</span><br><span class="line">        cin&gt;&gt;s;</span><br><span class="line">        <span class="type">int</span> p=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;n; i++) <span class="keyword">if</span>(s[i]==<span class="string">&#x27;w&#x27;</span>) p+=(<span class="number">1</span>&lt;&lt;i);</span><br><span class="line">        <span class="comment">//cout&lt;&lt;p&lt;&lt;endl;</span></span><br><span class="line">        <span class="keyword">if</span>(dp[p]) cout&lt;&lt;<span class="string">&quot;Yes&quot;</span>&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">else</span> cout&lt;&lt;<span class="string">&quot;No&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><h1 id="I-A-B问题-进制模拟"><a href="#I-A-B问题-进制模拟" class="headerlink" title="I    A+B问题 进制模拟"></a>I    A+B问题 进制模拟</h1><p><strong><a href="https://ac.nowcoder.com/acm/contest/23481/I">题目链接</a></strong></p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">2e6</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> M=<span class="number">998244353</span>;</span><br><span class="line"><span class="type">int</span> a[N], b[N];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function">string <span class="title">sum</span><span class="params">(string str1, string str2)</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(a, <span class="number">0</span>, <span class="keyword">sizeof</span> a);</span><br><span class="line">    <span class="built_in">memset</span>(b, <span class="number">0</span>, <span class="keyword">sizeof</span> b);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = str1.<span class="built_in">size</span>() - <span class="number">1</span>, j = <span class="number">0</span>; i &gt;= <span class="number">0</span>; --i, ++j) a[j] = str1[i] - <span class="number">48</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = str2.<span class="built_in">size</span>() - <span class="number">1</span>, j = <span class="number">0</span>; i &gt;= <span class="number">0</span>; --i, ++j) b[j] = str2[i] - <span class="number">48</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; N; i++) &#123;</span><br><span class="line">        b[i] += a[i];</span><br><span class="line">        <span class="keyword">if</span>(b[i] &gt;= n) &#123;</span><br><span class="line">            b[i + <span class="number">1</span>] += b[i] / n;</span><br><span class="line">            b[i] %= n;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> p = N - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b[p] == <span class="number">0</span> &amp;&amp; p &gt; <span class="number">0</span>) p--;</span><br><span class="line">    string t;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = p; i &gt;= <span class="number">0</span>; --i) &#123;</span><br><span class="line">        <span class="keyword">if</span>(b[i] &gt;= <span class="number">10</span>) t += <span class="string">&#x27;A&#x27;</span> + (b[i] - <span class="number">10</span>);</span><br><span class="line">        <span class="keyword">else</span> t += b[i] + <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> k;cin&gt;&gt;k;</span><br><span class="line">    n=k;</span><br><span class="line">    string a, b;</span><br><span class="line">    cin&gt;&gt;a&gt;&gt;b;</span><br><span class="line">    cout&lt;&lt;<span class="built_in">sum</span>(a, b)&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="J-牛妹的数学难题-数学"><a href="#J-牛妹的数学难题-数学" class="headerlink" title="J 牛妹的数学难题 数学"></a>J 牛妹的数学难题 数学</h1><p><strong><a href="https://ac.nowcoder.com/acm/contest/23481/J">题目链接</a></strong></p><h2 id="题意：-8"><a href="#题意：-8" class="headerlink" title="题意："></a>题意：</h2><p>题目骗你的<br>不过有个题<a href="https://codeforces.com/contest/1637/problem/D呜呜呜昨天考今天用">https://codeforces.com/contest/1637/problem/D呜呜呜昨天考今天用</a></p><h2 id="题解：-8"><a href="#题解：-8" class="headerlink" title="题解："></a>题解：</h2><p>看到ai的范围<br>题目式子是每次选 k 个数字<br><img src="https://img-blog.csdnimg.cn/4fdd224c11c34894b445f98133a98f51.png" alt="在这里插入图片描述"></p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">2e7</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> M=<span class="number">998244353</span>; </span><br><span class="line"><span class="type">int</span> p[N], d[N];</span><br><span class="line">ll <span class="title function_">ksm</span><span class="params">(ll a,ll p)</span>&#123;ll res=<span class="number">1</span>;<span class="keyword">while</span>(p)&#123;<span class="keyword">if</span>(p&amp;<span class="number">1</span>)&#123;res=res*a%M;&#125;a=a*a%M;p&gt;&gt;=<span class="number">1</span>;&#125;<span class="keyword">return</span> res;&#125;</span><br><span class="line">ll <span class="title function_">C</span><span class="params">(ll n, ll m)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> p[n]%M*ksm(p[n-m]%M*p[m]%M, M<span class="number">-2</span>)%M;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> n, k;</span><br><span class="line"><span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line"><span class="type">signed</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    ios_base::sync_with_stdio(<span class="literal">false</span>);<span class="built_in">cin</span>.tie(<span class="number">0</span>);<span class="built_in">cout</span>.tie(<span class="number">0</span>);</span><br><span class="line">    p[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=N; i++) p[i]=p[i<span class="number">-1</span>]*i%M;</span><br><span class="line">    d[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=N; i++) d[i]=d[i<span class="number">-1</span>]*<span class="number">2</span>%M;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;k;</span><br><span class="line">    <span class="type">int</span> x=<span class="number">0</span>, y=<span class="number">0</span>, xx;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;xx;</span><br><span class="line">        <span class="keyword">if</span>(xx==<span class="number">1</span>) x++;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(xx==<span class="number">2</span>) y++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=k;i++)</span><br><span class="line">    ans=(ans%M+C(x,i)*d[i]%M*C(y,k-i)%M)%M;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="ACM" scheme="http://wangqianyu6.github.io/categories/ACM/"/>
    
    
    <category term="牛客" scheme="http://wangqianyu6.github.io/tags/%E7%89%9B%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>2022牛客寒假算法基础集训营（五）全部题解</title>
    <link href="http://wangqianyu6.github.io/posts/fbff4d2a.html"/>
    <id>http://wangqianyu6.github.io/posts/fbff4d2a.html</id>
    <published>2022-04-10T13:55:40.000Z</published>
    <updated>2023-07-13T03:30:10.951Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="A-疫苗小孩-二分"><a href="#A-疫苗小孩-二分" class="headerlink" title="A    疫苗小孩 二分"></a>A    疫苗小孩 二分</h1><p><strong><a href="https://ac.nowcoder.com/acm/contest/23480/A">题目链接</a></strong></p><h2 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h2><h2 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e6</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">int</span> pos[N];</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">     cin&gt;&gt;n;</span><br><span class="line">     string s;</span><br><span class="line">     cin&gt;&gt;s;s=<span class="string">&#x27;.&#x27;</span>+s;</span><br><span class="line">     <span class="type">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">     <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(s[i]==<span class="string">&#x27;0&#x27;</span>) pos[++cnt]=i;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="type">int</span> k, w, q;</span><br><span class="line">     cin&gt;&gt;k&gt;&gt;w&gt;&gt;q;</span><br><span class="line">     <span class="type">int</span> ans=<span class="number">0</span>; </span><br><span class="line">     <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=cnt; i++) &#123; </span><br><span class="line">        <span class="type">int</span> p1=<span class="built_in">lower_bound</span>(pos+<span class="number">1</span>, pos+<span class="number">1</span>+cnt, pos[i]+k)-pos;</span><br><span class="line">        <span class="type">int</span> p11=<span class="built_in">lower_bound</span>(pos+<span class="number">1</span>, pos+<span class="number">1</span>+cnt, pos[p1]+k)-pos;</span><br><span class="line">        <span class="type">int</span> p12=<span class="built_in">upper_bound</span>(pos+<span class="number">1</span>, pos+<span class="number">1</span>+cnt, pos[p1]+k)-pos<span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> p2=<span class="built_in">upper_bound</span>(pos+<span class="number">1</span>, pos+<span class="number">1</span>+cnt, pos[i]+k)-pos<span class="number">-1</span>;</span><br><span class="line">        <span class="type">int</span> p21=<span class="built_in">lower_bound</span>(pos+<span class="number">1</span>, pos+<span class="number">1</span>+cnt, pos[p2]+k)-pos;</span><br><span class="line">        <span class="type">int</span> p22=<span class="built_in">upper_bound</span>(pos+<span class="number">1</span>, pos+<span class="number">1</span>+cnt, pos[p2]+k)-pos<span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">        p1=pos[p1];p2=pos[p2];p11=pos[p11];p12=pos[p12];p21=pos[p21];p22=pos[p22];</span><br><span class="line">        <span class="type">int</span> j=i;</span><br><span class="line">        i=pos[i];</span><br><span class="line">        <span class="keyword">if</span>(i&lt;p1&amp;&amp;p1&lt;=n) &#123;</span><br><span class="line">            ans=<span class="built_in">max</span>(ans, w-<span class="built_in">abs</span>(k-(p1-i))*q);</span><br><span class="line">            <span class="keyword">if</span>(p1&lt;p11&amp;&amp;p1&lt;=n) ans=<span class="built_in">max</span>(ans, w-<span class="built_in">abs</span>(k-(p1-i))*q+w-<span class="built_in">abs</span>(k-(p11-p1))*q);</span><br><span class="line">            <span class="keyword">if</span>(p1&lt;p12&amp;&amp;p1&lt;=n) ans=<span class="built_in">max</span>(ans, w-<span class="built_in">abs</span>(k-(p1-i))*q+w-<span class="built_in">abs</span>(k-(p12-p1))*q);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(i&lt;p2&amp;&amp;p2&lt;=n) &#123;</span><br><span class="line">            ans=<span class="built_in">max</span>(ans, w-<span class="built_in">abs</span>(k-(p2-i))*q);</span><br><span class="line">            <span class="keyword">if</span>(p2&lt;p21&amp;&amp;p21&lt;=n) ans=<span class="built_in">max</span>(ans, w-<span class="built_in">abs</span>(k-(p2-i))*q+w-<span class="built_in">abs</span>(k-(p21-p2))*q);</span><br><span class="line">            <span class="keyword">if</span>(p2&lt;p22&amp;&amp;p22&lt;=n) ans=<span class="built_in">max</span>(ans, w-<span class="built_in">abs</span>(k-(p2-i))*q+w-<span class="built_in">abs</span>(k-(p22-p2))*q);</span><br><span class="line">        &#125;</span><br><span class="line">        i=j;</span><br><span class="line">     &#125;</span><br><span class="line">     cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="B-乒乓小孩-构造【待补】"><a href="#B-乒乓小孩-构造【待补】" class="headerlink" title="B    乒乓小孩  构造【待补】"></a>B    乒乓小孩  构造【待补】</h1><p><strong><a href="https://ac.nowcoder.com/acm/contest/23480/B">题目链接</a></strong></p><h2 id="题意：-1"><a href="#题意：-1" class="headerlink" title="题意："></a>题意：</h2><h2 id="题解：-1"><a href="#题解：-1" class="headerlink" title="题解："></a>题解：</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">```</span><br><span class="line"># C战棋小孩 二进制枚举+贪心</span><br><span class="line">**[题目链接](https:<span class="comment">//ac.nowcoder.com/acm/contest/23480/C)**</span></span><br><span class="line">##题意：</span><br><span class="line"></span><br><span class="line">##题解： </span><br><span class="line">```c</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e6</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">int</span> pos[N];</span><br><span class="line"><span class="keyword">struct</span> node &#123;</span><br><span class="line">    <span class="type">int</span> val, m;</span><br><span class="line">&#125;a[N];</span><br><span class="line"><span class="type">int</span> p[N];</span><br><span class="line"><span class="type">int</span> b[N];</span><br><span class="line"><span class="type">signed</span> <span class="built_in">main</span>() &#123;</span><br><span class="line">    <span class="type">int</span> n, k, s;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;k&gt;&gt;s;</span><br><span class="line">    <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;n; i++)  cin&gt;&gt;p[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">        <span class="type">int</span> x,y,c,d;</span><br><span class="line">        cin&gt;&gt;x&gt;&gt;y&gt;&gt;c&gt;&gt;d; </span><br><span class="line">        a[i].val=<span class="built_in">max</span>(x, y);</span><br><span class="line">        a[i].m=<span class="built_in">max</span>(<span class="built_in">max</span>(x, y), <span class="built_in">max</span>(c, d));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;(<span class="number">1</span>&lt;&lt;n); i++) &#123; </span><br><span class="line">    <span class="type">int</span> cnt=<span class="number">0</span>; </span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>; j&lt;n; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(i&amp;(<span class="number">1</span>&lt;&lt;j)) b[j]=a[j].m, cnt++; </span><br><span class="line">            <span class="keyword">else</span> b[j]=a[j].val;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(cnt&gt;k) <span class="keyword">continue</span>; </span><br><span class="line">        <span class="built_in">sort</span>(b, b+n, <span class="built_in">greater</span>&lt;<span class="type">int</span>&gt;());</span><br><span class="line">        <span class="type">int</span> sum=s, maxx=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>; j&lt;n; j++) &#123;</span><br><span class="line">            sum+=b[j];</span><br><span class="line">            <span class="keyword">if</span>(sum&gt;=p[j]) maxx++;</span><br><span class="line">        &#125;</span><br><span class="line">        ans=<span class="built_in">max</span>(maxx, ans);</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="D-数位小孩-dfs"><a href="#D-数位小孩-dfs" class="headerlink" title="D    数位小孩 dfs"></a>D    数位小孩 dfs</h1><p><strong><a href="https://ac.nowcoder.com/acm/contest/23480/D">题目链接</a></strong></p><h2 id="题意：-2"><a href="#题意：-2" class="headerlink" title="题意："></a>题意：</h2><h2 id="题解：-2"><a href="#题解：-2" class="headerlink" title="题解："></a>题解：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="type">int</span> l, r;</span><br><span class="line"><span class="type">bool</span> vis[<span class="number">105</span>];</span><br><span class="line"><span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">dfs</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> sum, <span class="type">int</span> f, <span class="type">int</span> up)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (sum&lt;=up) &#123;</span><br><span class="line">        <span class="keyword">if</span>(f)ans++;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>; i&lt;=<span class="number">9</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(!vis[x+i]) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span> (i==<span class="number">1</span>)  dfs(i, sum*<span class="number">10</span>+i, <span class="number">1</span>, up);</span><br><span class="line">        <span class="keyword">else</span> dfs(i, sum*<span class="number">10</span>+i, f, up);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">signed</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>; i&lt;=<span class="number">18</span>; i++) &#123;</span><br><span class="line">        vis[i]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">2</span>; j&lt;i; j++) <span class="keyword">if</span>(i%j==<span class="number">0</span>) vis[i]=<span class="number">0</span>; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> l, r;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;l&gt;&gt;r;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">9</span>; i++) dfs(i, i, i==<span class="number">1</span>, r);</span><br><span class="line">    r=ans, ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">9</span>; i++) dfs(i, i, i==<span class="number">1</span>, l<span class="number">-1</span>);</span><br><span class="line">    l=ans;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;r-l&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="E-复苏小孩-线段树【补】"><a href="#E-复苏小孩-线段树【补】" class="headerlink" title="E    复苏小孩 线段树【补】"></a>E    复苏小孩 线段树【补】</h1><p><strong><a href="https://ac.nowcoder.com/acm/contest/23480/E">题目链接</a></strong></p><h2 id="题意：-3"><a href="#题意：-3" class="headerlink" title="题意："></a>题意：</h2><h2 id="题解：-3"><a href="#题解：-3" class="headerlink" title="题解："></a>题解：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">2e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> M=<span class="number">998244353</span>;</span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line">ll <span class="title function_">ksm</span><span class="params">(ll a,ll p)</span>&#123;ll res=<span class="number">1</span>; p%=(M<span class="number">-1</span>);<span class="keyword">while</span>(p)&#123;<span class="keyword">if</span>(p&amp;<span class="number">1</span>)&#123;res=res*a%M;&#125;a=a*a%M;p&gt;&gt;=<span class="number">1</span>;&#125;<span class="keyword">return</span> res;&#125;</span><br><span class="line"><span class="type">int</span> sum[<span class="number">5</span>][N*<span class="number">4</span>];</span><br><span class="line"><span class="type">int</span> b[<span class="number">5</span>][N];</span><br><span class="line"><span class="type">int</span> val[N];</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> dd = ksm(<span class="number">2</span>, M<span class="number">-2</span>);</span><br><span class="line"><span class="type">void</span> <span class="title function_">pushup1</span><span class="params">(<span class="type">int</span> id, <span class="type">int</span> jin)</span> &#123;</span><br><span class="line">    sum[jin][id] = (sum[jin][id &lt;&lt; <span class="number">1</span>]+sum[jin][id&lt;&lt;<span class="number">1</span>|<span class="number">1</span>]+M)%M;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">build1</span><span class="params">(<span class="type">int</span> id, <span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> jin)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (l == r) &#123;</span><br><span class="line">        sum[jin][id] = b[jin][l]%M;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    build1(id &lt;&lt; <span class="number">1</span>, l, mid, jin);</span><br><span class="line">    build1(id &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, mid + <span class="number">1</span>, r, jin);</span><br><span class="line">    pushup1(id, jin);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">update1</span><span class="params">(<span class="type">int</span> id, <span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> x, <span class="type">int</span> v, <span class="type">int</span> jin)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (l == r) &#123;</span><br><span class="line">        sum[jin][id] += v;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (x &lt;= mid) &#123;</span><br><span class="line">        update1(id &lt;&lt; <span class="number">1</span>, l, mid, x, v, jin);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        update1(id &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, mid + <span class="number">1</span>, r, x, v, jin);</span><br><span class="line">    &#125;</span><br><span class="line">    pushup1(id, jin);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">query1</span><span class="params">(<span class="type">int</span> id, <span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> x, <span class="type">int</span> y, <span class="type">int</span> jin)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;=l&amp;&amp;r&lt;=y) &#123;</span><br><span class="line">        <span class="keyword">return</span> sum[jin][id]%M;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;=mid) &#123;</span><br><span class="line">        ans=(ans%M+query1(id&lt;&lt;<span class="number">1</span>, l, mid, x, y,jin)%M)%M;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(y&gt;mid) &#123;</span><br><span class="line">        ans=(ans%M+query1(id&lt;&lt;<span class="number">1</span>|<span class="number">1</span>, mid+<span class="number">1</span>, r, x, y,jin)%M)%M;</span><br><span class="line">    &#125;</span><br><span class="line">    ans%=M;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">signed</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="type">int</span> n, q;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n&gt;&gt;q;</span><br><span class="line"><span class="built_in">string</span> s;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;s;</span><br><span class="line">val[n+<span class="number">1</span>]=<span class="number">3</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i=n; i&gt;=<span class="number">1</span>; i--) &#123;</span><br><span class="line">val[i]=val[i+<span class="number">1</span>]*dd%M;</span><br><span class="line">b[s[i<span class="number">-1</span>]-<span class="string">&#x27;0&#x27;</span>][i]=val[i];</span><br><span class="line">        update1(<span class="number">1</span>,<span class="number">1</span>,n, i, val[i], s[i<span class="number">-1</span>]-<span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(q--) &#123;</span><br><span class="line"><span class="type">int</span> op, x, y;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;op&gt;&gt;x&gt;&gt;y;</span><br><span class="line"><span class="keyword">if</span> (op==<span class="number">1</span>) &#123;</span><br><span class="line">update1(<span class="number">1</span>,<span class="number">1</span>,n, x, M-val[x], s[x<span class="number">-1</span>]-<span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">update1(<span class="number">1</span>,<span class="number">1</span>,n, x, val[x], y);</span><br><span class="line">s[x<span class="number">-1</span>]=y+<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="type">int</span> ans1, ans2, ans3;</span><br><span class="line">ans1=ksm(dd, y-x+<span class="number">1</span>)+((query1(<span class="number">1</span>,<span class="number">1</span>,n,x,y,<span class="number">1</span>)+M)%M)*ksm(<span class="number">2</span>, n-y);</span><br><span class="line">ans2=ksm(dd, y-x+<span class="number">1</span>)+((query1(<span class="number">1</span>,<span class="number">1</span>,n,x,y,<span class="number">2</span>)+M)%M)*ksm(<span class="number">2</span>, n-y);</span><br><span class="line">ans3=ksm(dd, y-x+<span class="number">1</span>)+((query1(<span class="number">1</span>,<span class="number">1</span>,n,x,y,<span class="number">3</span>)+M)%M)*ksm(<span class="number">2</span>, n-y);</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;ans1%M&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt; ans2%M&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt; ans3%M&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="F-飞车小孩-数学【待补】"><a href="#F-飞车小孩-数学【待补】" class="headerlink" title="F    飞车小孩  数学【待补】"></a>F    飞车小孩  数学【待补】</h1><p><strong><a href="https://ac.nowcoder.com/acm/contest/23480/F">题目链接</a></strong></p><h2 id="题意：-4"><a href="#题意：-4" class="headerlink" title="题意："></a>题意：</h2><h2 id="题解：-4"><a href="#题解：-4" class="headerlink" title="题解："></a>题解：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h1 id="G-163小孩-暴力"><a href="#G-163小孩-暴力" class="headerlink" title="G    163小孩 暴力"></a>G    163小孩 暴力</h1><p><strong><a href="https://ac.nowcoder.com/acm/contest/23480/G">题目链接</a></strong></p><h2 id="题意：-5"><a href="#题意：-5" class="headerlink" title="题意："></a>题意：</h2><h2 id="题解：-5"><a href="#题解：-5" class="headerlink" title="题解："></a>题解：</h2><p>打表代码<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> a[<span class="number">100</span>];</span><br><span class="line"><span class="type">int</span> flag[<span class="number">100</span>];</span><br><span class="line"><span class="type">void</span> <span class="title function_">dfs</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> f)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>(f==<span class="number">6</span>) &#123;</span><br><span class="line">        ans++;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=x; i&lt;=<span class="number">13</span>; i++) &#123;      </span><br><span class="line">        <span class="keyword">if</span>(flag[i]&gt;=<span class="number">4</span>)<span class="keyword">continue</span>;</span><br><span class="line">        a[f+<span class="number">1</span>]=i;</span><br><span class="line">        flag[i]++;</span><br><span class="line">        dfs(i, f+<span class="number">1</span>);</span><br><span class="line">        flag[i]--;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="type">signed</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="number">18395</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="H-一六三小孩-？【待补】"><a href="#H-一六三小孩-？【待补】" class="headerlink" title="H    一六三小孩  ？【待补】"></a>H    一六三小孩  ？【待补】</h1><p><strong><a href="https://ac.nowcoder.com/acm/contest/23480/H">题目链接</a></strong></p><h2 id="题意：-6"><a href="#题意：-6" class="headerlink" title="题意："></a>题意：</h2><h2 id="题解：-6"><a href="#题解：-6" class="headerlink" title="题解："></a>题解：</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">```</span><br><span class="line"># I兔崽小孩 前缀和二分</span><br><span class="line">**[题目链接](https:<span class="comment">//ac.nowcoder.com/acm/contest/23480/I)**</span></span><br><span class="line"></span><br><span class="line">```cpp</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e6</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">int</span> n,q;</span><br><span class="line"><span class="type">int</span> b[N], sum[N],t[N];</span><br><span class="line"><span class="keyword">inline</span> <span class="type">int</span> <span class="built_in">read</span>() &#123;</span><br><span class="line">    <span class="type">char</span> ch = <span class="built_in">getchar</span>(); <span class="type">int</span> x = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(ch &lt; <span class="string">&#x27;0&#x27;</span> || ch &gt; <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(ch == <span class="string">&#x27;-&#x27;</span>) f = <span class="number">-1</span>;</span><br><span class="line">        ch = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125; <span class="keyword">while</span>(<span class="string">&#x27;0&#x27;</span> &lt;= ch &amp;&amp; ch &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + ch - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        ch = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125; <span class="keyword">return</span> x * f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">signed</span> <span class="built_in">main</span>() &#123; </span><br><span class="line">    n=<span class="built_in">read</span>();q=<span class="built_in">read</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line">        t[i]=<span class="built_in">read</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>; i&lt;=n; i++) &#123;</span><br><span class="line">        b[i<span class="number">-1</span>]=t[i]-t[i<span class="number">-1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(b+<span class="number">1</span>, b+n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;n; i++) &#123;</span><br><span class="line">        sum[i]=sum[i<span class="number">-1</span>]+b[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(q--) &#123;</span><br><span class="line">        <span class="type">int</span> x, y;</span><br><span class="line">        x=<span class="built_in">read</span>();y=<span class="built_in">read</span>();</span><br><span class="line">        <span class="type">int</span> p=<span class="built_in">lower_bound</span>(b+<span class="number">1</span>, b+n, x)-b;</span><br><span class="line">        <span class="comment">//cout&lt;&lt;sum[n-1]-sum[p-1]-x*(n-1-p+1)&lt;&lt;endl;</span></span><br><span class="line">        <span class="keyword">if</span>(sum[n<span class="number">-1</span>]-sum[p<span class="number">-1</span>]-x*(n<span class="number">-1</span>-p+<span class="number">1</span>)&gt;=y) <span class="built_in">printf</span>(<span class="string">&quot;Yes\n&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;No\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="J-三国小孩-签到"><a href="#J-三国小孩-签到" class="headerlink" title="J    三国小孩 签到"></a>J    三国小孩 签到</h1><p><strong><a href="https://ac.nowcoder.com/acm/contest/23480/J">题目链接</a></strong></p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n, m, k;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m&gt;&gt;k;</span><br><span class="line">    <span class="keyword">if</span>(n+m&gt;k) cout&lt;&lt;<span class="string">&quot;YES&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">else</span> cout&lt;&lt;<span class="string">&quot;NO&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="K-造梦小孩-分块【待补】"><a href="#K-造梦小孩-分块【待补】" class="headerlink" title="K    造梦小孩  分块【待补】"></a>K    造梦小孩  分块【待补】</h1><p><strong><a href="https://ac.nowcoder.com/acm/contest/23480/K">题目链接</a></strong></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><font color=#999AAA >  Qwq</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="ACM" scheme="http://wangqianyu6.github.io/categories/ACM/"/>
    
    
    <category term="牛客" scheme="http://wangqianyu6.github.io/tags/%E7%89%9B%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>2022牛客寒假算法基础集训营（四）全部题解</title>
    <link href="http://wangqianyu6.github.io/posts/33426548.html"/>
    <id>http://wangqianyu6.github.io/posts/33426548.html</id>
    <published>2022-04-05T13:55:40.000Z</published>
    <updated>2023-07-13T03:12:23.473Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="A-R-模拟"><a href="#A-R-模拟" class="headerlink" title="A    R 模拟"></a>A    R 模拟</h1><p><strong><a href="https://ac.nowcoder.com/acm/contest/23479/A">题目链接</a></strong></p><h2 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h2><p>给一个包含只包含大写字母的字符串，找有多少个子串包含  k  个  R  字符且不包含  P  字符</p><h2 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h2><p>不包括  P  就分段来计算<br>至少包含  k  个  R<br>贡献就等于这个位置 第前 k 个  R  位置</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">2e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">int</span> a[N], p[N];</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n, k; cin&gt;&gt;n&gt;&gt;k;</span><br><span class="line">    string s; cin&gt;&gt;s;</span><br><span class="line">    s=s+<span class="string">&quot;P&quot;</span>;</span><br><span class="line">    <span class="type">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">    a[<span class="number">0</span>]=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>; i&lt;=n; i++) &#123;</span><br><span class="line"><span class="keyword">if</span>(s[i]==<span class="string">&#x27;P&#x27;</span>) a[++cnt]=i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> ans=<span class="number">0</span>; </span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>; j&lt;=cnt; j++) &#123; </span><br><span class="line"><span class="type">int</span> cntt=<span class="number">0</span>;</span><br><span class="line">p[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i=a[j<span class="number">-1</span>]+<span class="number">1</span>; i&lt;a[j]; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (s[i]==<span class="string">&#x27;R&#x27;</span>) p[++cntt]=i+<span class="number">1</span>-a[j<span class="number">-1</span>]<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">if</span>(cntt&gt;=k) ans+=p[cntt-k+<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="B-进制-线段树"><a href="#B-进制-线段树" class="headerlink" title="B    进制 线段树"></a>B    进制 线段树</h1><p><strong><a href="https://ac.nowcoder.com/acm/contest/23479/B">题目链接</a></strong></p><h2 id="题意：-1"><a href="#题意：-1" class="headerlink" title="题意："></a>题意：</h2><h2 id="题解：-1"><a href="#题解：-1" class="headerlink" title="题解："></a>题解：</h2><p>所能表示的某进制的最小值的某进制就是该串里的最大的数字+1,不然那个数不可能出现<br>题目要求单点修改和区间查询<br>那就是最简单的求最大值和求和的线段树板子<br>求和的线段树是存了2-10进制棵每一位的数字 <em> 该位权值<br>比如10进制树 123存的是1 </em> 10 <em> 10        ———-          2</em>10 ———-3<br>求和出来还要除与多的权值 取[1,2] ，答案等于120/10</p><p>这个求和的bug真的找了一万年呜呜呜</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> M=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="type">int</span> b[<span class="number">13</span>][N];</span><br><span class="line"><span class="type">int</span> n, q;</span><br><span class="line"><span class="type">int</span> p[<span class="number">13</span>][N];</span><br><span class="line"><span class="type">int</span> maxx[<span class="number">4</span>*N];</span><br><span class="line"><span class="type">int</span> sum[<span class="number">13</span>][<span class="number">4</span>*N];</span><br><span class="line"><span class="function">ll <span class="title">ksm</span><span class="params">(ll a,ll p)</span></span>&#123;ll res=<span class="number">1</span>;<span class="keyword">while</span>(p)&#123;<span class="keyword">if</span>(p&amp;<span class="number">1</span>)&#123;res=res*a%M;&#125;a=a*a%M;p&gt;&gt;=<span class="number">1</span>;&#125;<span class="keyword">return</span> res;&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">pushup</span><span class="params">(<span class="type">int</span> id)</span> </span>&#123;</span><br><span class="line">    maxx[id] = <span class="built_in">max</span>(maxx[id &lt;&lt; <span class="number">1</span>], maxx[id &lt;&lt; <span class="number">1</span> | <span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">build</span><span class="params">(<span class="type">int</span> id, <span class="type">int</span> l, <span class="type">int</span> r)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (l == r) &#123;</span><br><span class="line">        maxx[id] = a[l];</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">build</span>(id &lt;&lt; <span class="number">1</span>, l, mid);</span><br><span class="line">    <span class="built_in">build</span>(id &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, mid + <span class="number">1</span>, r);</span><br><span class="line">    <span class="built_in">pushup</span>(id);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">update</span><span class="params">(<span class="type">int</span> id, <span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> x, <span class="type">int</span> v)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (l == r) &#123;</span><br><span class="line">        maxx[id] = v;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (x &lt;= mid) &#123;</span><br><span class="line">        <span class="built_in">update</span>(id &lt;&lt; <span class="number">1</span>, l, mid, x, v);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">update</span>(id &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, mid + <span class="number">1</span>, r, x, v);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">pushup</span>(id);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">query</span><span class="params">(<span class="type">int</span> id, <span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> x, <span class="type">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;=l&amp;&amp;r&lt;=y) &#123;</span><br><span class="line">        <span class="keyword">return</span> maxx[id];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;=mid) &#123;</span><br><span class="line">        ans=<span class="built_in">max</span>(ans, <span class="built_in">query</span>(id&lt;&lt;<span class="number">1</span>, l, mid, x, y));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(y&gt;mid) &#123;</span><br><span class="line">        ans=<span class="built_in">max</span>(ans, <span class="built_in">query</span>(id&lt;&lt;<span class="number">1</span>|<span class="number">1</span>, mid+<span class="number">1</span>, r, x, y));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">pushup1</span><span class="params">(<span class="type">int</span> id, <span class="type">int</span> jin)</span> </span>&#123;</span><br><span class="line">    sum[jin][id] = (sum[jin][id &lt;&lt; <span class="number">1</span>]+sum[jin][id &lt;&lt; <span class="number">1</span> | <span class="number">1</span>])%M;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">build1</span><span class="params">(<span class="type">int</span> id, <span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> jin)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (l == r) &#123;</span><br><span class="line">        sum[jin][id] = b[jin][l]%M;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">build1</span>(id &lt;&lt; <span class="number">1</span>, l, mid, jin);</span><br><span class="line">    <span class="built_in">build1</span>(id &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, mid + <span class="number">1</span>, r, jin);</span><br><span class="line">    <span class="built_in">pushup1</span>(id, jin);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">update1</span><span class="params">(<span class="type">int</span> id, <span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> x, <span class="type">int</span> v, <span class="type">int</span> jin)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (l == r) &#123;</span><br><span class="line">        sum[jin][id] = v%M;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (x &lt;= mid) &#123;</span><br><span class="line">        <span class="built_in">update1</span>(id &lt;&lt; <span class="number">1</span>, l, mid, x, v,jin);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">update1</span>(id &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, mid + <span class="number">1</span>, r, x, v,jin);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">pushup1</span>(id, jin);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">query1</span><span class="params">(<span class="type">int</span> id, <span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> x, <span class="type">int</span> y,<span class="type">int</span> jin)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;=l&amp;&amp;r&lt;=y) &#123;</span><br><span class="line">        <span class="keyword">return</span> sum[jin][id]%M;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;=mid) &#123;</span><br><span class="line">        ans=ans%M+<span class="built_in">query1</span>(id&lt;&lt;<span class="number">1</span>, l, mid, x, y,jin)%M;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(y&gt;mid) &#123;</span><br><span class="line">        ans=ans%M+<span class="built_in">query1</span>(id&lt;&lt;<span class="number">1</span>|<span class="number">1</span>, mid+<span class="number">1</span>, r, x, y,jin)%M;</span><br><span class="line">    &#125;</span><br><span class="line">    ans%=M;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;q;</span><br><span class="line">    string s;</span><br><span class="line">    cin&gt;&gt;s;</span><br><span class="line">    s=<span class="string">&#x27;.&#x27;</span>+s;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=n; i&gt;=<span class="number">1</span>; i--) &#123;</span><br><span class="line">        a[i]=(s[i]-<span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=n; i&gt;=<span class="number">1</span>; i--) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">2</span>; j&lt;=<span class="number">10</span>; j++) &#123;</span><br><span class="line">                b[j][i]=a[i]*<span class="built_in">ksm</span>(j, n-i)%M;</span><br><span class="line">                <span class="comment">//cout&lt;&lt;i&lt;&lt;&quot; &quot;&lt;&lt;j&lt;&lt;&quot; &quot;&lt;&lt;b[j][i]&lt;&lt;endl;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">build</span>(<span class="number">1</span>, <span class="number">1</span>, n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>; i&lt;=<span class="number">10</span>; i++) <span class="built_in">build1</span>(<span class="number">1</span>, <span class="number">1</span>, n, i);</span><br><span class="line">    <span class="comment">//cout&lt;&lt;&quot;   &quot;&lt;&lt;query1(1,1,n,1 ,3, 10)&lt;&lt;endl;</span></span><br><span class="line">    <span class="keyword">while</span>(q--) &#123;</span><br><span class="line">        <span class="type">int</span> op, x, y;</span><br><span class="line">        cin&gt;&gt;op&gt;&gt;x&gt;&gt;y;</span><br><span class="line">        <span class="keyword">if</span>(op==<span class="number">1</span>) &#123;</span><br><span class="line">            <span class="built_in">update</span>(<span class="number">1</span>, <span class="number">1</span>, n, x, y);</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>; i&lt;=<span class="number">10</span>; i++) <span class="built_in">update1</span>(<span class="number">1</span>, <span class="number">1</span>, n, x, y*<span class="built_in">ksm</span>(i, n-x), i);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">int</span> dang=<span class="built_in">query</span>(<span class="number">1</span>, <span class="number">1</span>, n, x, y);</span><br><span class="line">            <span class="keyword">if</span>(dang==<span class="number">0</span>) cout&lt;&lt;<span class="number">0</span>&lt;&lt;endl;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                dang++;</span><br><span class="line">                cout&lt;&lt;<span class="built_in">query1</span>(<span class="number">1</span>,<span class="number">1</span>,n,x, y,dang)%<span class="function">M*<span class="title">ksm</span><span class="params">(ksm(dang, n-y), M<span class="number">-2</span>)</span>%M&lt;&lt;endl</span>;<span class="comment">//逆元</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="C-蓝彗星-前缀和"><a href="#C-蓝彗星-前缀和" class="headerlink" title="C    蓝彗星 前缀和"></a>C    蓝彗星 前缀和</h1><p><strong><a href="https://ac.nowcoder.com/acm/contest/23479/C">题目链接</a></strong></p><h2 id="题意：-2"><a href="#题意：-2" class="headerlink" title="题意："></a>题意：</h2><h2 id="题解：-2"><a href="#题解：-2" class="headerlink" title="题解："></a>题解：</h2><p>前缀和求覆盖次数<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">2e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">int</span> a[N], b[N], c[N];</span><br><span class="line"><span class="type">signed</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> n, t;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;t;</span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;s;</span><br><span class="line">    s=<span class="string">&#x27;.&#x27;</span>+s;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line">        <span class="type">int</span> x; <span class="built_in">cin</span>&gt;&gt;x;</span><br><span class="line">        <span class="keyword">if</span>(s[i]==<span class="string">&#x27;B&#x27;</span>) b[x]++, b[x+t]--;<span class="comment">//x和x+t-1+1</span></span><br><span class="line">        <span class="keyword">else</span> c[x]++, c[x+t]--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=N; i++) &#123;</span><br><span class="line">        b[i]+=b[i<span class="number">-1</span>];</span><br><span class="line">        c[i]+=c[i<span class="number">-1</span>];</span><br><span class="line">        <span class="comment">//cout&lt;&lt;i&lt;&lt;&quot; &quot;&lt;&lt;b[i]&lt;&lt;&quot; &quot;&lt;&lt;c[i]&lt;&lt;endl;输出就可以看到这个时间 彗星亮了没</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=N; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(b[i]&amp;&amp;!c[i]) ans++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="D-雪色光晕-计算几何"><a href="#D-雪色光晕-计算几何" class="headerlink" title="D    雪色光晕 计算几何"></a>D    雪色光晕 计算几何</h1><p><strong><a href="https://ac.nowcoder.com/acm/contest/23479/D">题目链接</a></strong></p><h2 id="题意：-3"><a href="#题意：-3" class="headerlink" title="题意："></a>题意：</h2><h2 id="题解：-3"><a href="#题解：-3" class="headerlink" title="题解："></a>题解：</h2><p>求点到线段的最短距离板子<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">2e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> M=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="type">double</span> <span class="title function_">dis</span><span class="params">(<span class="type">double</span> xx, <span class="type">double</span> yy, <span class="type">double</span> x1, <span class="type">double</span> y2)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sqrt</span>((xx-x1)*(xx-x1)+(yy-y2)*(yy-y2));</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">double</span> <span class="title function_">Pd</span><span class="params">(<span class="type">double</span> x, <span class="type">double</span> y, <span class="type">double</span> x1, <span class="type">double</span> y1, <span class="type">double</span> x2, <span class="type">double</span> y2)</span>&#123;</span><br><span class="line">    <span class="type">double</span> cross = (x2 - x1) * (x - x1) + (y2 - y1) * (y - y1);</span><br><span class="line">    <span class="keyword">if</span> (cross &lt;= <span class="number">0</span>) <span class="keyword">return</span> <span class="built_in">sqrt</span>((x - x1) * (x - x1) + (y - y1) * (y - y1));</span><br><span class="line">    <span class="type">double</span> d2 = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);</span><br><span class="line">    <span class="keyword">if</span> (cross &gt;= d2) <span class="keyword">return</span> <span class="built_in">sqrt</span>((x - x2) * (x - x2) + (y - y2) * (y - y2));</span><br><span class="line">    <span class="type">double</span> r = cross / d2;</span><br><span class="line">    <span class="type">double</span> px = x1 + (x2 - x1) * r;</span><br><span class="line">    <span class="type">double</span> py = y1 + (y2 - y1) * r;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sqrt</span>((x - px) * (x - px) + (py - y) * (py - y));</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">signed</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="type">double</span> x0, y0, X, Y;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;x0&gt;&gt;y0&gt;&gt;X&gt;&gt;Y;</span><br><span class="line">    <span class="type">double</span> minn=dis(x0,y0,X,Y);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line">        <span class="type">double</span> x, y;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;x&gt;&gt;y;</span><br><span class="line">        minn=min(minn, Pd(X, Y, x0,y0, x0+x, y0+y));</span><br><span class="line">        x0+=x;</span><br><span class="line">        y0+=y;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;fixed&lt;&lt;setprecision(<span class="number">8</span>)&lt;&lt;minn&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><h1 id="E-真假签到题-签到"><a href="#E-真假签到题-签到" class="headerlink" title="E    真假签到题 签到"></a>E    真假签到题 签到</h1><p><strong><a href="https://ac.nowcoder.com/acm/contest/23479/E">题目链接</a></strong></p><h2 id="题意：-4"><a href="#题意：-4" class="headerlink" title="题意："></a>题意：</h2><p>那个函数就是求本身</p><h2 id="题解：-4"><a href="#题解：-4" class="headerlink" title="题解："></a>题解：</h2><p>要开longlong<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">2e5</span>+<span class="number">5</span>; </span><br><span class="line"><span class="type">signed</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">   <span class="type">int</span> x;</span><br><span class="line">   <span class="built_in">cin</span>&gt;&gt;x;</span><br><span class="line">   <span class="built_in">cout</span>&lt;&lt;x&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="F-小红的记谱法-模拟"><a href="#F-小红的记谱法-模拟" class="headerlink" title="F    小红的记谱法 模拟"></a>F    小红的记谱法 模拟</h1><p><strong><a href="https://ac.nowcoder.com/acm/contest/23479/F">题目链接</a></strong></p><h2 id="题意：-5"><a href="#题意：-5" class="headerlink" title="题意："></a>题意：</h2><p>模拟</p><h2 id="题解：-5"><a href="#题解：-5" class="headerlink" title="题解："></a>题解：</h2><p>模拟<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">2e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">int</span> a[N], b[N], c[N];</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="type">char</span>, <span class="type">int</span>&gt; mp;</span><br><span class="line"><span class="type">signed</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="built_in">string</span> pp=<span class="string">&quot;CDEFGAB&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;pp.size(); i++) mp[pp[i]]=i+<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;s;</span><br><span class="line">    <span class="type">int</span> n=s.size();</span><br><span class="line">    <span class="type">int</span> p=<span class="number">0</span>;<span class="comment">//呜呜在里面定义忘记赋值 找了好久bug</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123; </span><br><span class="line">        <span class="keyword">if</span>(s[i]==<span class="string">&#x27;&lt;&#x27;</span>) p++;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(s[i]==<span class="string">&#x27;&gt;&#x27;</span>) p--;</span><br><span class="line">        <span class="keyword">else</span> &#123; </span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;mp[s[i]];</span><br><span class="line">            <span class="keyword">if</span>(p==<span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(p&gt;<span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>; j&lt;=p; j++) <span class="built_in">cout</span>&lt;&lt;<span class="string">&#x27;.&#x27;</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>; j&lt;=-p; j++) <span class="built_in">cout</span>&lt;&lt;<span class="string">&#x27;*&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="G-子序列权值乘积-数学"><a href="#G-子序列权值乘积-数学" class="headerlink" title="G    子序列权值乘积 数学"></a>G    子序列权值乘积 数学</h1><p><strong><a href="https://ac.nowcoder.com/acm/contest/23479/G">题目链接</a></strong></p><h2 id="题意：-6"><a href="#题意：-6" class="headerlink" title="题意："></a>题意：</h2><p>求这个数组的所有 非空子序列 的最大值*最小值的乘积是多少？<br>1e5</p><h2 id="题解：-6"><a href="#题解：-6" class="headerlink" title="题解："></a>题解：</h2><p>先排序<br>若它作为一个字序列的最小值，后面的  n-i  个数随意，也就是有  2的n-i  次方 个机会作为最小值，同样的，有 2的 i-1 次方 个机会作为最小值，那这个数产生的贡献就是<br>幂次取模的话取 Mod-1 </p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">2e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> M=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> MM=<span class="number">1e9</span>+<span class="number">6</span>;</span><br><span class="line"><span class="type">int</span> a[N], b[N];</span><br><span class="line"><span class="type">int</span> dp[<span class="number">1005</span>][<span class="number">1005</span>];</span><br><span class="line">ll <span class="title function_">ksm</span><span class="params">(ll a,ll p)</span>&#123;ll res=<span class="number">1</span>;<span class="keyword">while</span>(p)&#123;<span class="keyword">if</span>(p&amp;<span class="number">1</span>)&#123;res=res*a%M;&#125;a=a*a%M;p&gt;&gt;=<span class="number">1</span>;&#125;<span class="keyword">return</span> res%M;&#125;</span><br><span class="line">ll <span class="title function_">ksmm</span><span class="params">(ll a,ll p)</span>&#123;ll res=<span class="number">1</span>;<span class="keyword">while</span>(p)&#123;<span class="keyword">if</span>(p&amp;<span class="number">1</span>)&#123;res=res*a%MM;&#125;a=a*a%MM;p&gt;&gt;=<span class="number">1</span>;&#125;<span class="keyword">return</span> res%MM;&#125;</span><br><span class="line"><span class="type">signed</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++) <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">    sort(a+<span class="number">1</span>, a+<span class="number">1</span>+n); </span><br><span class="line">    <span class="type">int</span> ans=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line">        <span class="type">int</span> b=ksmm(<span class="number">2</span>, i<span class="number">-1</span>)+ksmm(<span class="number">2</span>, n-i);</span><br><span class="line">        ans=ans%M*ksm(a[i], b)%M;</span><br><span class="line">        ans%=M;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans%M&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="H-真真真真真签到题-签到"><a href="#H-真真真真真签到题-签到" class="headerlink" title="H    真真真真真签到题 签到"></a>H    真真真真真签到题 签到</h1><p><strong><a href="https://ac.nowcoder.com/acm/contest/23479/H">题目链接</a></strong></p><h2 id="题意：-7"><a href="#题意：-7" class="headerlink" title="题意："></a>题意：</h2><h2 id="题解：-7"><a href="#题解：-7" class="headerlink" title="题解："></a>题解：</h2><p>就是把距离当成体对角线来算体积<br>因为小紫肯定在正方体中间<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ihnt long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">2e5</span>+<span class="number">5</span>; </span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   <span class="type">double</span> x;</span><br><span class="line">   cin&gt;&gt;x;</span><br><span class="line">   cout&lt;&lt;fixed&lt;&lt;<span class="built_in">setprecision</span>(<span class="number">7</span>)&lt;&lt;x/<span class="built_in">sqrt</span>(<span class="number">3</span>)*<span class="number">2</span>*x/<span class="built_in">sqrt</span>(<span class="number">3</span>)*<span class="number">2</span>*x/<span class="built_in">sqrt</span>(<span class="number">3</span>)*<span class="number">2</span>&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="I-爆炸的符卡洋洋洒洒-背包dp"><a href="#I-爆炸的符卡洋洋洒洒-背包dp" class="headerlink" title="I    爆炸的符卡洋洋洒洒 背包dp"></a>I    爆炸的符卡洋洋洒洒 背包dp</h1><p><strong><a href="https://ac.nowcoder.com/acm/contest/23479/I">题目链接</a></strong></p><h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p> dp[i][j]  代表轮到第 i 张卡时候的质量% k==j 的最大值<br>转移方程<br> int p=(j-a[i]+k) %k<br> dp[j][i]=max(dp[j][i-1], dp[j][i]); 不取当前牌<br> dp[j][i]=max(dp[p][i-1]+b[i], dp[j][i]);  取当前牌<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">2e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> M=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="type">int</span> a[N], b[N];</span><br><span class="line"><span class="type">int</span> dp[<span class="number">1005</span>][<span class="number">1005</span>];</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n, k;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;k;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line">        cin&gt;&gt;a[i]&gt;&gt;b[i];</span><br><span class="line">        a[i]%=k;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>（<span class="type">int</span> i=<span class="number">0</span>; i&lt;=n; i++）<span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>; j&lt;=k; j++) dp[i][j]=<span class="number">-1e18</span>;</span><br><span class="line">    dp[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=k<span class="number">-1</span>; j&gt;=<span class="number">0</span>; j--) &#123;</span><br><span class="line">            <span class="type">int</span> p=(j-a[i]+k)%k;</span><br><span class="line">            dp[j][i]=<span class="built_in">max</span>(dp[j][i<span class="number">-1</span>], dp[j][i]); </span><br><span class="line">            dp[j][i]=<span class="built_in">max</span>(dp[p][i<span class="number">-1</span>]+b[i], dp[j][i]);  </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> maxx=dp[<span class="number">0</span>][n];</span><br><span class="line">    <span class="keyword">if</span>(maxx&lt;=<span class="number">0</span>) cout&lt;&lt;<span class="number">-1</span>&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">else</span> cout&lt;&lt;maxx&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="J-区间合数的最小公倍数-数学"><a href="#J-区间合数的最小公倍数-数学" class="headerlink" title="J    区间合数的最小公倍数 数学"></a>J    区间合数的最小公倍数 数学</h1><p><strong><a href="https://ac.nowcoder.com/acm/contest/23479/J">题目链接</a></strong></p><h2 id="题意：-8"><a href="#题意：-8" class="headerlink" title="题意："></a>题意：</h2><h2 id="题解：-8"><a href="#题解：-8" class="headerlink" title="题解："></a>题解：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">2e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> M=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="type">int</span> p[N];</span><br><span class="line"><span class="type">bool</span> check[N],vis[N];</span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line"><span class="type">void</span> <span class="title function_">init</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    check[<span class="number">1</span>]=<span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!check[i])p[++p[<span class="number">0</span>]]=i;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=p[<span class="number">0</span>];j++)&#123;</span><br><span class="line">            t=i*p[j];</span><br><span class="line">            <span class="keyword">if</span>(t&gt;n)<span class="keyword">break</span>;</span><br><span class="line">            check[t]=<span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">if</span>(i%p[j]==<span class="number">0</span>)<span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">ll <span class="title function_">ksm</span><span class="params">(ll a,ll p)</span>&#123;ll res=<span class="number">1</span>;<span class="keyword">while</span>(p)&#123;<span class="keyword">if</span>(p&amp;<span class="number">1</span>)&#123;res=res*a%M;&#125;a=a*a%M;p&gt;&gt;=<span class="number">1</span>;&#125;<span class="keyword">return</span> res;&#125;</span><br><span class="line"><span class="type">int</span> mp[N];</span><br><span class="line"><span class="type">signed</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    n=<span class="number">30001</span>;</span><br><span class="line">    init();</span><br><span class="line">    <span class="type">int</span> l, r;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;l&gt;&gt;r;</span><br><span class="line">    <span class="type">bool</span> q=<span class="number">0</span>; </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=l; i&lt;=r; i++) &#123;</span><br><span class="line">        <span class="type">int</span> num=i;</span><br><span class="line">        <span class="type">int</span> m=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>; j&lt;=p[<span class="number">0</span>]; j++) &#123;</span><br><span class="line">            <span class="keyword">while</span>(num%p[j]==<span class="number">0</span>) &#123;</span><br><span class="line">                num/=p[j];</span><br><span class="line">                m++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(m&gt;=<span class="number">2</span>) q=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">continue</span>; </span><br><span class="line">        num=i;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>; j&lt;=p[<span class="number">0</span>]; j++) &#123;</span><br><span class="line">            <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span>(num%p[j]==<span class="number">0</span>) &#123;</span><br><span class="line">                num/=p[j];</span><br><span class="line">                sum++;</span><br><span class="line">            &#125;</span><br><span class="line">            mp[p[j]]=max(sum, mp[p[j]]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!q) &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="number">-1</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> ans=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=p[<span class="number">0</span>]; i++) &#123; </span><br><span class="line">        ans=ans*ksm(p[i], mp[p[i]])%M;</span><br><span class="line">        ans%=M;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="K-小红的真真假假签到题题-签到"><a href="#K-小红的真真假假签到题题-签到" class="headerlink" title="K    小红的真真假假签到题题 签到"></a>K    小红的真真假假签到题题 签到</h1><p><strong><a href="https://ac.nowcoder.com/acm/contest/23479/K">题目链接</a></strong></p><h2 id="题意：-9"><a href="#题意：-9" class="headerlink" title="题意："></a>题意：</h2><h2 id="题解：-9"><a href="#题解：-9" class="headerlink" title="题解："></a>题解：</h2><p>101变成101101<br>就等于乘（2的幂次+1）一定是倍数且1的个数不同<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">2e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">signed</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> x;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;x;</span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    <span class="keyword">while</span>(x) &#123;</span><br><span class="line">        s=<span class="type">char</span>(<span class="string">&#x27;0&#x27;</span>+x%<span class="number">2</span>)+s;</span><br><span class="line">        x/=<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    s=s+s;</span><br><span class="line">    <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> p=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;s.size(); i++) &#123;</span><br><span class="line">        ans=ans*<span class="number">2</span>+(s[i]-<span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="L-在这冷漠的世界里光光哭哭-dp【待补】"><a href="#L-在这冷漠的世界里光光哭哭-dp【待补】" class="headerlink" title="L    在这冷漠的世界里光光哭哭 dp【待补】"></a>L    在这冷漠的世界里光光哭哭 dp【待补】</h1><p><strong><a href="https://ac.nowcoder.com/acm/contest/23479/L">题目链接</a></strong></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="ACM" scheme="http://wangqianyu6.github.io/categories/ACM/"/>
    
    
    <category term="牛客" scheme="http://wangqianyu6.github.io/tags/%E7%89%9B%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>2022牛客寒假算法基础集训营（三）全部题解</title>
    <link href="http://wangqianyu6.github.io/posts/c0aea12a.html"/>
    <id>http://wangqianyu6.github.io/posts/c0aea12a.html</id>
    <published>2022-03-28T13:55:40.000Z</published>
    <updated>2023-07-13T03:48:45.964Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="B-智乃买瓜-dp"><a href="#B-智乃买瓜-dp" class="headerlink" title="B 智乃买瓜 dp"></a>B 智乃买瓜 dp</h1><p><strong><a href="https://ac.nowcoder.com/acm/contest/23478/B">题目链接</a></strong></p><h2 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h2><p>有 $ n $ 个物品重量为 $a<a href="正偶数">i</a>$ ，可以买一整个或买一半或不买，问重量和为$1，2…m$的方案数。<br>$ (0&lt;=n&lt;=1e3，1&lt;=m&lt;=1e3, 2&lt;ai&lt;=2*1e3) $</p><h2 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h2><p>$dp[i]$ 表示重量和为 $i$ 的方案数<br>转移方程为<br>$if(j&gt;=a[i]) dp[j]+=dp[j-a[i]]$ $dp[j]$从 $dp[j-a[i]]$的状态转移过来<br>$if(j&gt;=a[i]/2) dp[j]+=dp[j-a[i]/2]$</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">2e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> M=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="type">int</span> dp[N];</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios_base::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>), cin.<span class="built_in">tie</span>(<span class="number">0</span>); cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> n, m;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++) cin&gt;&gt;a[i];</span><br><span class="line">    dp[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=m; j&gt;=<span class="number">0</span>; j--) &#123;</span><br><span class="line">            <span class="keyword">if</span>(j&gt;=a[i]) dp[j]=(dp[j]+dp[j-a[i]])%M;</span><br><span class="line">            <span class="keyword">if</span>(j&gt;=a[i]/<span class="number">2</span>) dp[j]=(dp[j]+dp[j-a[i]/<span class="number">2</span>])%M;</span><br><span class="line">        &#125;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=m; i++) &#123;</span><br><span class="line">        cout&lt;&lt;dp[i]%M&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">     &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="C-智乃买瓜h-dp"><a href="#C-智乃买瓜h-dp" class="headerlink" title="C 智乃买瓜h dp"></a>C 智乃买瓜h dp</h1><p><strong><a href="https://ac.nowcoder.com/acm/contest/23478/C">题目链接</a></strong></p><h2 id="题意：-1"><a href="#题意：-1" class="headerlink" title="题意："></a>题意：</h2><p>知道重量和为 $1-m$的方案数，求有几个瓜怎么样的瓜。<br>$(0&lt;=n&lt;=1e3，1&lt;=m&lt;=1e3, 2&lt;ai&lt;=2*1e3)$</p><h2 id="题解：-1"><a href="#题解：-1" class="headerlink" title="题解："></a>题解：</h2><p>$dp[i]$ 表示重量和为 $i$ 的方案数<br>因为 $dp[1]$ 可以确定原重量为 2 的瓜的个数<br>$dp[2]$ 可以确定原重量为 4 的瓜的个数<br>$a[i]$ 等于 i自己的个数 + 其他组合的和等于i 的方案数<br> i自己的个数 等于 $dp[i]$ - 其他组合的和等于i 的方案数<br>i的方案数已知 其他组合的和等于i的方案数就是背包过来的 </p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e6</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> M=<span class="number">1e9</span>+<span class="number">7</span>; </span><br><span class="line"><span class="type">int</span> in[N], inn[N];</span><br><span class="line">pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; p[N];</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; g;</span><br><span class="line"><span class="type">int</span> dp[N];</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="type">int</span> num[N];</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios_base::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>), cin.<span class="built_in">tie</span>(<span class="number">0</span>); cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    dp[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line">        cin&gt;&gt;a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>; i&lt;=n+n; i+=<span class="number">2</span>) &#123;<span class="comment">//枚举数量</span></span><br><span class="line">        <span class="type">int</span> p=((a[i/<span class="number">2</span>]-dp[i/<span class="number">2</span>]+M)%M);</span><br><span class="line">        num[i]=p; </span><br><span class="line">        cnt+=num[i];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>; j&lt;=p; j++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> k=n; k&gt;=<span class="number">0</span>; k--) &#123;</span><br><span class="line">                <span class="keyword">if</span>(k&gt;=i) dp[k]=(dp[k]+dp[k-i])%M;</span><br><span class="line">                <span class="keyword">if</span>(k&gt;=i/<span class="number">2</span>) dp[k]=(dp[k]+dp[k-i/<span class="number">2</span>])%M;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;cnt&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">if</span>(cnt) &#123;</span><br><span class="line">        cout&lt;&lt;cnt&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n+n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>; j&lt;=num[i]; j++) &#123;</span><br><span class="line">                <span class="comment">//cout&lt;&lt;i&lt;&lt;&quot; &quot;;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        cout&lt;&lt;<span class="number">1</span>&lt;&lt;endl;</span><br><span class="line">        cout&lt;&lt;n*<span class="number">2</span>+<span class="number">2</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="E-智乃的数字积木-easy-version-暴力模拟"><a href="#E-智乃的数字积木-easy-version-暴力模拟" class="headerlink" title="E    智乃的数字积木(easy version) 暴力模拟"></a>E    智乃的数字积木(easy version) 暴力模拟</h1><p><strong><a href="https://ac.nowcoder.com/acm/contest/23478/E">题目链接</a></strong></p><h2 id="题意：-2"><a href="#题意：-2" class="headerlink" title="题意："></a>题意：</h2><p><img src="https://img-blog.csdnimg.cn/0bbe76c9380541abbc66e88344db4250.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAcXVpbm4xOA==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><h2 id="题解：-2"><a href="#题解：-2" class="headerlink" title="题解："></a>题解：</h2><p>k好小<br>按照题意模拟<br>既然要最大的数字 就在相同颜色的块从大到小排序</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e6</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> M=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="type">int</span> col[N]; </span><br><span class="line"><span class="built_in">set</span>&lt;<span class="type">int</span>&gt; v;</span><br><span class="line">ll <span class="title function_">ksm</span><span class="params">(ll a,ll p)</span>&#123;ll res=<span class="number">1</span>;<span class="keyword">while</span>(p)&#123;<span class="keyword">if</span>(p&amp;<span class="number">1</span>)&#123;res=res*a%M;&#125;a=a*a%M;p&gt;&gt;=<span class="number">1</span>;&#125;<span class="keyword">return</span> res;&#125;</span><br><span class="line"><span class="type">signed</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    ios_base::sync_with_stdio(<span class="number">0</span>), <span class="built_in">cin</span>.tie(<span class="number">0</span>); <span class="built_in">cout</span>.tie(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> n, m, k;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m&gt;&gt;k;</span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;s;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">        a[i+<span class="number">1</span>]=s[i]-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;col[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> ks=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n+<span class="number">1</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(col[i]==col[i<span class="number">-1</span>])<span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">else</span> sort(a+ks, a+<span class="number">1</span>+i<span class="number">-1</span>, greater&lt;<span class="type">int</span>&gt;()), ks=i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> o=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line">        o=o*<span class="number">10</span>+a[i];</span><br><span class="line">        o%=M;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;o&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">while</span>(k--) &#123;</span><br><span class="line">        <span class="type">int</span> p, q;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;p&gt;&gt;q;</span><br><span class="line">        ks=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++) <span class="keyword">if</span>(col[i]==p) col[i]=q;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n+<span class="number">1</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(col[i]==col[i<span class="number">-1</span>]) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">else</span> sort(a+ks, a+<span class="number">1</span>+i<span class="number">-1</span>, greater&lt;<span class="type">int</span>&gt;()), ks=i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> o=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line">            o=o*<span class="number">10</span>+a[i];</span><br><span class="line">            o%=M;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;o%M&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="F-智乃的数字积木-hard-version-【待补】"><a href="#F-智乃的数字积木-hard-version-【待补】" class="headerlink" title="F    智乃的数字积木(hard version) 【待补】"></a>F    智乃的数字积木(hard version) 【待补】</h1><p><strong><a href="https://ac.nowcoder.com/acm/contest/23478/F">题目链接</a></strong></p><h2 id="题意：-3"><a href="#题意：-3" class="headerlink" title="题意："></a>题意：</h2><h2 id="题解：-3"><a href="#题解：-3" class="headerlink" title="题解："></a>题解：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">```</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#G智乃的树旋转(easy version) 思维</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">**[题目链接](https:<span class="comment">//ac.nowcoder.com/acm/contest/23478/G)**</span></span><br><span class="line"></span><br><span class="line">##题意：</span><br><span class="line"></span><br><span class="line">现在智乃有一颗尺寸大小为 $N$ 二叉树，智乃对其做了一次旋转操作将其打乱，她想让你通过一次树的旋转操作将其还原.</span><br><span class="line"></span><br><span class="line">##题解：</span><br><span class="line"></span><br><span class="line">父亲-儿子 -&gt;儿子-父亲</span><br><span class="line">![在这里插入图片描述](https:<span class="comment">//img-blog.csdnimg.cn/7865a64c77a1424a8c4beb7174b68b91.png)</span></span><br><span class="line"></span><br><span class="line">```c</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>; </span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e6</span>+<span class="number">5</span>; </span><br><span class="line"><span class="type">int</span> a, n, b;</span><br><span class="line"><span class="type">int</span> in[N], inn[N]; </span><br><span class="line"><span class="type">signed</span> main() &#123;</span><br><span class="line">    ios_base::sync_with_stdio(<span class="number">0</span>), <span class="built_in">cin</span>.tie(<span class="number">0</span>); <span class="built_in">cout</span>.tie(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line">        <span class="type">int</span> a, b;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b; </span><br><span class="line">        in[a]=i;</span><br><span class="line">        in[b]=i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line">        <span class="type">int</span> a, b;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b; </span><br><span class="line">        inn[a]=i;</span><br><span class="line">        inn[b]=i; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>; j&lt;=n; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(in[i]==j&amp;&amp;inn[j]==i) &#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="number">1</span>&lt;&lt;<span class="built_in">endl</span>&lt;&lt;j&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="number">0</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="H-智乃的树旋转-hard-version-【补】"><a href="#H-智乃的树旋转-hard-version-【补】" class="headerlink" title="H    智乃的树旋转(hard version) 【补】"></a>H    智乃的树旋转(hard version) 【补】</h1><p><strong><a href="https://ac.nowcoder.com/acm/contest/23478/H">题目链接</a></strong></p><h2 id="题意：-4"><a href="#题意：-4" class="headerlink" title="题意："></a>题意：</h2><p>现在智乃有一颗尺寸大小为 $N$ 二叉树，智乃对其做了一次旋转操作将其打乱，她想让你通过一系列树的旋转操作将其还原。<br>$(1&lt;=N&lt;=1e3)$</p><h2 id="题解：-4"><a href="#题解：-4" class="headerlink" title="题解："></a>题解：</h2><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>思考这么一个问题：如果对某一个非根节点，一直作为旋转轴进行旋转，那么最后会发生什么。<br>显然，最终该节点一定被转到了整棵树的根部。</p><h3 id="想法"><a href="#想法" class="headerlink" title="想法"></a>想法</h3><p>想法是先把两棵树转成一样的，旋转次数就是两棵树操作次数之和。<br>怎么转成同样一棵树呢因为旋转的话中序遍历是不变的。<br>就把图的先序遍历DLR变成中序遍历LDR的样子。<br>就是转所有的左子树转转转成父亲的右子树或者转成根为止。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> in long long</span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">2e3</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">int</span> F[N][<span class="number">2</span>];</span><br><span class="line"><span class="type">int</span> R[N][<span class="number">2</span>], L[N][<span class="number">2</span>];</span><br><span class="line"><span class="type">int</span> cnt=<span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> ord[N];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="type">int</span>&gt; V;</span><br><span class="line"><span class="built_in">stack</span>&lt;<span class="type">int</span>&gt; S;</span><br><span class="line"><span class="type">void</span> <span class="title function_">get_order</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> t)</span> &#123;</span><br><span class="line">    ord[++cnt]=x;</span><br><span class="line">    <span class="keyword">if</span>(L[x][t]) get_order(L[x][t], t);</span><br><span class="line">    <span class="keyword">if</span>(R[x][t]) get_order(R[x][t], t);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">RR</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> t)</span> &#123;</span><br><span class="line">    <span class="type">int</span> rt=F[l][t];</span><br><span class="line">    <span class="type">int</span> f=F[rt][t];</span><br><span class="line">    <span class="type">int</span> lc=R[l][t];</span><br><span class="line">    F[l][t]=f;</span><br><span class="line">    F[rt][t]=l;</span><br><span class="line">    F[lc][t]=rt;</span><br><span class="line">    R[l][t]=rt;</span><br><span class="line">    L[rt][t]=lc;</span><br><span class="line">    <span class="keyword">if</span>(L[f][t]==rt) L[f][t]=l;</span><br><span class="line">    <span class="keyword">else</span> R[f][t]=l;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">cal</span><span class="params">(<span class="type">int</span> r, <span class="type">int</span> t)</span> &#123;</span><br><span class="line">    cnt=<span class="number">0</span>;</span><br><span class="line">    get_order(r, t);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line">        <span class="keyword">while</span>(<span class="number">1</span>) &#123;</span><br><span class="line">            <span class="type">int</span> f=F[ord[i]][t];</span><br><span class="line">            <span class="keyword">if</span>(f==<span class="number">0</span>||R[f][t]==ord[i]) <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">if</span>(t==<span class="number">1</span>) V.push_back(ord[i]);</span><br><span class="line">            <span class="keyword">else</span> S.push(f);</span><br><span class="line">            RR(ord[i], t);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">signed</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    ios_base::sync_with_stdio(<span class="number">0</span>);<span class="built_in">cin</span>.tie(<span class="number">0</span>);<span class="built_in">cout</span>.tie(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>; j&lt;=<span class="number">1</span>; j++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line">            <span class="type">int</span> x, y;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;x&gt;&gt;y;</span><br><span class="line">            L[i][j]=x;R[i][j]=y;</span><br><span class="line">            <span class="keyword">if</span>(x) F[x][j]=i;</span><br><span class="line">            <span class="keyword">if</span>(y) F[y][j]=i;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="type">int</span> r1=<span class="number">0</span>,r2=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(F[i][<span class="number">0</span>]==<span class="number">0</span>) r1=i;</span><br><span class="line">        <span class="keyword">if</span>(F[i][<span class="number">1</span>]==<span class="number">0</span>) r2=i;</span><br><span class="line">    &#125;</span><br><span class="line">    cal(r1, <span class="number">0</span>);</span><br><span class="line">    cal(r2, <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;V.size()+S.size()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> x:V) <span class="built_in">cout</span>&lt;&lt;x&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">while</span>(!S.empty()) &#123;</span><br><span class="line">        <span class="type">int</span> x=S.top();</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;x&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        S.pop();</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="I-智乃的密码-尺取-二分"><a href="#I-智乃的密码-尺取-二分" class="headerlink" title="I    智乃的密码 尺取/二分"></a>I    智乃的密码 尺取/二分</h1><p><strong><a href="https://ac.nowcoder.com/acm/contest/23478/I">题目链接</a></strong></p><h2 id="题意：-5"><a href="#题意：-5" class="headerlink" title="题意："></a>题意：</h2><h2 id="题解：-5"><a href="#题解：-5" class="headerlink" title="题解："></a>题解：</h2><p>找到最远的合法的 r 计算 $[L， R]$范围内的ans</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e6</span>+<span class="number">7</span>;</span><br><span class="line"><span class="type">int</span> cnt[<span class="number">5</span>];</span><br><span class="line"><span class="type">int</span> tmp,k;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> ans;</span><br><span class="line"><span class="type">int</span> <span class="title function_">cn</span><span class="params">(<span class="type">char</span> a)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;a&lt;=<span class="string">&#x27;9&#x27;</span>)<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(a&gt;=<span class="string">&#x27;a&#x27;</span>&amp;&amp;a&lt;=<span class="string">&#x27;z&#x27;</span>)<span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(a&gt;=<span class="string">&#x27;A&#x27;</span>&amp;&amp;a&lt;=<span class="string">&#x27;Z&#x27;</span>)<span class="keyword">return</span> <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">4</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">signed</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> n,l,r;</span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;l&gt;&gt;r&gt;&gt;s;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=n-l;i++)&#123;</span><br><span class="line">        <span class="keyword">while</span>(k&lt;n&amp;&amp;tmp&lt;<span class="number">3</span>)&#123;</span><br><span class="line">            <span class="type">int</span> o=cn(s[k]);</span><br><span class="line">            <span class="keyword">if</span>(cnt[o]==<span class="number">0</span>)tmp++;</span><br><span class="line">            cnt[o]++;</span><br><span class="line">            k++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> z=min(r<span class="number">-1</span>+i,n<span class="number">-1</span>)-max(k<span class="number">-1</span>,l<span class="number">-1</span>+i)+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(z&gt;=<span class="number">0</span>&amp;&amp;tmp&gt;=<span class="number">3</span>) ans+=z;</span><br><span class="line">        cnt[cn(s[i])]--;</span><br><span class="line">        <span class="keyword">if</span>(cnt[cn(s[i])]==<span class="number">0</span>)tmp--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="J-智乃的C语言模除方程-分类讨论【补】"><a href="#J-智乃的C语言模除方程-分类讨论【补】" class="headerlink" title="J    智乃的C语言模除方程 分类讨论【补】"></a>J    智乃的C语言模除方程 分类讨论【补】</h1><p><strong><a href="https://ac.nowcoder.com/acm/contest/23478/J">题目链接</a></strong></p><h2 id="题意：-6"><a href="#题意：-6" class="headerlink" title="题意："></a>题意：</h2><p>$x$%$P==Q,L&lt;=x&lt;=R,l&lt;=Q&lt;=r$<br>求有多少个x使得方程成立<br>$(-1e9&lt;=P,l,r,L,R&lt;=1e9)$</p><h2 id="题解：-6"><a href="#题解：-6" class="headerlink" title="题解："></a>题解：</h2><p><a href="https://blog.nowcoder.net/n/96cfd281c1c34b469b1a0ae58bfa61f5"><strong>qwq</strong></a><br>$x&gt;=0时$，Q的有效区间是$[0, p-1]$<br>$x&lt;0时$，Q的有效区间是$[1-p, 0]$<br>首先[L,R]转化成[0, N]的问题<br>题目就变成查询 0 到 N 这段有多少数字<br>然后变成[0,N]内有多少个数模P在[l, r]内<br>然后算循环节和零头<br>答案就分为两个部分 一部分是 N%p的部分 另一部分是N/P 个（0~P-1）</p><p>这种区间统计的问题，边角讨论比较复杂的话，尽量别硬讨论<br>要么能转换成前缀的，算1到n，要么把边角单独处理了，然后把两个端点都放在舒服的位置，再去算<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> in long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">2e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">int</span> n, l, r, L, R, p; </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">gi</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b, <span class="type">int</span> c, <span class="type">int</span> d)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(b&lt;c||d&lt;a) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">min</span>(d, b)-<span class="built_in">max</span>(c, a)+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">query</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>) <span class="keyword">return</span> <span class="built_in">abs</span>(x/p)*<span class="built_in">gi</span>(<span class="number">1</span>-p, <span class="number">0</span>, l, r)+<span class="built_in">gi</span>((x%p), <span class="number">0</span>, l, r);</span><br><span class="line">    <span class="keyword">return</span> (x/p)*<span class="built_in">gi</span>(<span class="number">0</span>, p<span class="number">-1</span>, l, r)+<span class="built_in">gi</span>(<span class="number">0</span>, x%p, l, r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    cin&gt;&gt;p&gt;&gt;l&gt;&gt;r&gt;&gt;L&gt;&gt;R;</span><br><span class="line">    p=<span class="built_in">abs</span>(p);<span class="comment">//注意</span></span><br><span class="line">    <span class="keyword">if</span>(L&lt;=<span class="number">0</span>&amp;&amp;R&gt;=<span class="number">0</span>) cout&lt;&lt;<span class="built_in">query</span>(L)+<span class="built_in">query</span>(R)-<span class="built_in">query</span>(<span class="number">0</span>)&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(R&lt;<span class="number">0</span>) cout&lt;&lt;<span class="built_in">query</span>(L)-<span class="built_in">query</span>(R+<span class="number">1</span>)&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">else</span> cout&lt;&lt;<span class="built_in">query</span>(R)-<span class="built_in">query</span>(L<span class="number">-1</span>)&lt;&lt;endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="K-智乃的C语言模除方程-another-version-【待补】"><a href="#K-智乃的C语言模除方程-another-version-【待补】" class="headerlink" title="K    智乃的C语言模除方程(another version) 【待补】"></a>K    智乃的C语言模除方程(another version) 【待补】</h1><p>**[题目链接#总结</p><p><font color=#999AAA >  Qwq</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="ACM" scheme="http://wangqianyu6.github.io/categories/ACM/"/>
    
    
    <category term="牛客" scheme="http://wangqianyu6.github.io/tags/%E7%89%9B%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>2022牛客寒假算法基础集训营（一）全部题解</title>
    <link href="http://wangqianyu6.github.io/posts/4a17b156.html"/>
    <id>http://wangqianyu6.github.io/posts/4a17b156.html</id>
    <published>2022-03-21T09:55:40.000Z</published>
    <updated>2023-07-13T03:31:07.542Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="A-九小时九个人九扇门-dp"><a href="#A-九小时九个人九扇门-dp" class="headerlink" title="A 九小时九个人九扇门 dp"></a>A 九小时九个人九扇门 dp</h1><p><strong><a href="https://ac.nowcoder.com/acm/contest/23106/A">题目链接</a></strong></p><h2 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h2><p>一个数字的数字根是指：将该数字各数位上的数字相加得到一个新的数，直到得到的数字小于 $10$ 为止.。设置小于 $10$ 的数字，其数字根就为其本身。<br>$k$ 个人能够打开门上数字为d的一扇数字门，当且仅当这 $k$ 个人的腕表数字之和的数字根恰好为 $d$。<br>$(1&lt;=n&lt;=1e5,1&lt;ai&lt;=1e9)$</p><h2 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h2><h3 id="状态"><a href="#状态" class="headerlink" title="状态"></a>状态</h3><p>$dp[i][j]$ 表示考虑了前 $i$ 个数，选择了一些数字使得数字根为 $j$ 的方案数</p><h3 id="转移方程"><a href="#转移方程" class="headerlink" title="转移方程"></a>转移方程</h3><p> 不加当前位使得数字根为 $j$ 的方案数为上一位继承来<br>$dp[i][j] += dp[i - 1][j];$<br>加上当前位使得数字根为 $f(a[i]<em>10+j)$ 的方案数为上一位继承来<br>$dp[i][f(a[i]</em>10+j)] += dp[i - 1][j];$<br>当前位的方案数+1<br>$dp[i][f(a[i])]++;$ </p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e6</span>+<span class="number">100</span>; </span><br><span class="line"><span class="type">const</span> <span class="type">int</span> M=<span class="number">998244353</span>;</span><br><span class="line"><span class="type">int</span> t;</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="type">int</span> b[N];</span><br><span class="line"><span class="type">int</span> f[<span class="number">10</span>][N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">fun</span><span class="params">(<span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(n&lt;<span class="number">10</span>) <span class="keyword">return</span> n;</span><br><span class="line"><span class="keyword">while</span>(n&gt;=<span class="number">10</span>) &#123;</span><br><span class="line">        <span class="type">int</span> m=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(n) &#123;</span><br><span class="line">            m+=n%<span class="number">10</span>;</span><br><span class="line">            n/=<span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        n=m;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> n;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">t=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(t--) &#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line">cin&gt;&gt;a[i];</span><br><span class="line">a[i]=<span class="built_in">fun</span>(a[i]);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>; j&lt;=<span class="number">9</span>; j++) &#123;</span><br><span class="line"><span class="type">int</span> tmp=<span class="built_in">fun</span>(a[i]*<span class="number">10</span>+j);</span><br><span class="line">f[j][i]+=f[j][i<span class="number">-1</span>]%M;</span><br><span class="line">                f[tmp][i]=(f[tmp][i]+f[j][i<span class="number">-1</span>])%M;</span><br><span class="line">&#125;</span><br><span class="line">f[a[i]][i]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">9</span>; i++) &#123;</span><br><span class="line">cout&lt;&lt;f[i][n]%M&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="H-牛牛看云-思维"><a href="#H-牛牛看云-思维" class="headerlink" title="H   牛牛看云 思维"></a>H   牛牛看云 思维</h1><p><strong><a href="https://ac.nowcoder.com/acm/contest/23106/H">题目链接</a></strong></p><h2 id="题意：-1"><a href="#题意：-1" class="headerlink" title="题意："></a>题意：</h2><p>求<br>$n$           $n$<br>$Σ$            $Σ$ $∣ai+a j −1000∣$<br>$i$=1         $j$=$i$<br>$(0&lt;ai&lt;=1000, n&lt;=1000000)$</p><h2 id="题解：-1"><a href="#题解：-1" class="headerlink" title="题解："></a>题解：</h2><p>因为这个 $n$ 很打，$ai$很小<br>就从 $ai$ 入手<br>记录 $ai$ 的个数枚举 $ai$<br>直接计算答案<br>假如$ai==aj$ ans=自己和自己+自己和别人 $/2$ (因为 $j$ 是从 $i$ 开始的 所以 $/2$<br>$ai!=aj$ ans=$cnt[ai]*cnt[aj]/2$ </p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">vector&lt;<span class="type">int</span>&gt; g[N];</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios_base::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>), cin.<span class="built_in">tie</span>(<span class="number">0</span>); cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> n;cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line">        <span class="type">int</span> x; </span><br><span class="line">        cin&gt;&gt;x;</span><br><span class="line">        g[x].<span class="built_in">push_back</span>(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> a, b;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;=<span class="number">1000</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=i; j&lt;=<span class="number">1000</span>; j++) &#123;</span><br><span class="line">            <span class="type">int</span> a=g[i].<span class="built_in">size</span>();</span><br><span class="line">            <span class="type">int</span> b=g[j].<span class="built_in">size</span>();</span><br><span class="line">            <span class="keyword">if</span>(i==j) &#123;</span><br><span class="line">                ans+=(a+a*(a<span class="number">-1</span>)/<span class="number">2</span>)*<span class="built_in">abs</span>(i+i<span class="number">-1000</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                ans+=a*b*<span class="built_in">abs</span>(i+j<span class="number">-1000</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="F-中位数切分-思维"><a href="#F-中位数切分-思维" class="headerlink" title="F   中位数切分 思维"></a>F   中位数切分 思维</h1><p><strong><a href="https://ac.nowcoder.com/acm/contest/23106/F">题目链接</a></strong></p><h2 id="题意：-2"><a href="#题意：-2" class="headerlink" title="题意："></a>题意：</h2><p>给定一个长为 $n$ 的数组 $a$ 和一个整数 $m$，求最多可以划分成多少段，使得每一段的中位数都大于等于$m$。$(1&lt;ai, m&lt;=1e9, 1&lt;=n&lt;=1e5)$</p><h2 id="题解：-2"><a href="#题解：-2" class="headerlink" title="题解："></a>题解：</h2><p>原数组大于等于m的记为1，记录 $cnt1$ 个<br>小于的记为-1，记录 $cnt2$ 个<br>当一段的 $sum&gt;=1$ 的时候这一段中位数就 $&gt;=m$<br>然后就去拿 $1$ 的去中和 $-1$, 最大的段数就是先把负数中和了使得 $sum==0$ 再加上一个$1$，假如$cnt1-cnt2&lt;=0$则不存在，不然段数为 $cnt1-cnt2$个 。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">double</span> eps=<span class="number">1e-4</span>;</span><br><span class="line"><span class="type">int</span> n, m;<span class="type">int</span> a[N];</span><br><span class="line"><span class="type">signed</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    ios_base::sync_with_stdio(<span class="number">0</span>), <span class="built_in">cin</span>.tie(<span class="number">0</span>); <span class="built_in">cout</span>.tie(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--) &#123;</span><br><span class="line">         <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">         <span class="type">int</span> p=<span class="number">0</span>;</span><br><span class="line">         <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">            <span class="keyword">if</span>(a[i]&gt;=m) p++;</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">if</span>(p-(n-p)&gt;<span class="number">0</span>) <span class="built_in">cout</span>&lt;&lt;p-(n-p)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">         <span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;<span class="number">-1</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="I-B站与各唱各的-数学"><a href="#I-B站与各唱各的-数学" class="headerlink" title="I   B站与各唱各的 数学"></a>I   B站与各唱各的 数学</h1><p><strong><a href="https://ac.nowcoder.com/acm/contest/23106/I">题目链接</a></strong></p><h2 id="题意：-3"><a href="#题意：-3" class="headerlink" title="题意："></a>题意：</h2><h2 id="题解：-3"><a href="#题解：-3" class="headerlink" title="题解："></a>题解：</h2><p>打表呜呜呜<br>最小值是<br><img src="https://img-blog.csdnimg.cn/bfad14d0f14b4db093fa872090642eef.png" alt="在这里插入图片描述"><br>下一个数是210<br>就发现是素数的乘积$2,2<em>3,2</em>3*5$<br>因为素数乘积的数不是素数，那么他的因子也少<br>那么$H(x)$就大<br>因为素数 $x$ 的欧拉函数等于 $x-1$，那么最大值就是范围内最大的素数的$H(x)=(x-1)/x$<br>$ps:$牛客题解上说 $1e9$ 以内最大的两个素数间隔是 $282$ 就直接暴力找</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">bool</span> vis[<span class="number">1000005</span>];</span><br><span class="line"><span class="type">int</span> pri[<span class="number">1000005</span>], cnt, n;</span><br><span class="line"><span class="type">void</span> <span class="title function_">get_prime</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">    vis[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!vis[i]) &#123;</span><br><span class="line">            pri[++cnt] = i;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">2</span> * i; j &lt;= n; j += i) &#123;</span><br><span class="line">                vis[j] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> xiao[N];</span><br><span class="line"><span class="type">signed</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    get_prime(<span class="number">100005</span>);</span><br><span class="line">    ios_base::sync_with_stdio(<span class="number">0</span>), <span class="built_in">cin</span>.tie(<span class="number">0</span>); <span class="built_in">cout</span>.tie(<span class="number">0</span>);</span><br><span class="line">    xiao[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=cnt; i++) &#123;</span><br><span class="line">         xiao[i]=xiao[i<span class="number">-1</span>]*pri[i]; </span><br><span class="line">         <span class="keyword">if</span>(xiao[i]&gt;=<span class="number">1e9</span>) <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cnt=<span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> t; <span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--) &#123;</span><br><span class="line">        <span class="type">int</span> n;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">        <span class="keyword">if</span>(n==<span class="number">1</span>) &#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="number">-1</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> sum=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=cnt; i&gt;=<span class="number">1</span>; i--)  &#123;</span><br><span class="line">            <span class="keyword">if</span>(xiao[i]&lt;=n)  &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;xiao[i]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=n; i&gt;=<span class="number">1</span>; i--) &#123;</span><br><span class="line">                <span class="type">int</span> q=<span class="number">0</span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">2</span>; j&lt;=<span class="built_in">sqrt</span>(i); j++) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (i%j==<span class="number">0</span>) &#123;</span><br><span class="line">                        q=<span class="number">1</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(!q) &#123;</span><br><span class="line">                    <span class="built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="D-牛牛做数论-数学"><a href="#D-牛牛做数论-数学" class="headerlink" title="D 牛牛做数论 数学"></a>D 牛牛做数论 数学</h1><p><strong><a href="https://ac.nowcoder.com/acm/contest/23106/D">题目链接</a></strong></p><h2 id="题意：-4"><a href="#题意：-4" class="headerlink" title="题意："></a>题意：</h2><p>有 $n$ 位人在翻唱一首共 $m$ 句的歌曲，人不交流。一句歌词被所有人唱或者没被人唱这句歌词无效，让成功唱出的句子数尽可能多，求期望唱成功的句子数量对1e9 +7取模的结果。<br>$(1&lt;=t&lt;=1e4,1&lt;=n, m&lt;=1e9,)$</p><h2 id="题解：-4"><a href="#题解：-4" class="headerlink" title="题解："></a>题解：</h2><p>$m$ 句歌词相互独立<br>设唱的概率为 $pi$ 不唱的概率为 $(1-pi)$<br>那么答案就是失败的概率就是$(p1<em>p2</em>p3<em>…</em>pn)$+$(1-p1)<em>(1-p2)</em>…<em>(1-pn)$<br>那么成功的概率就是$1-(p1</em>p2<em>p3</em>…<em>pn)$+$(1-p1)</em>(1-p2)<em>…</em>(1-pn)$<br>最大化成功就是最小化石板就要使得pi都为$1/2$ 其实是猜的不过可以验算几个<br>那么答案就等于$m<em>(1-(1/2)^n</em>2)$</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> M=<span class="number">1e9</span>+<span class="number">7</span>;  </span><br><span class="line">ll <span class="title function_">ksm</span><span class="params">(ll a,ll p)</span>&#123;ll res=<span class="number">1</span>;<span class="keyword">while</span>(p)&#123;<span class="keyword">if</span>(p&amp;<span class="number">1</span>)&#123;res=res*a%M;&#125;a=a*a%M;p&gt;&gt;=<span class="number">1</span>;&#125;<span class="keyword">return</span> res;&#125;</span><br><span class="line"><span class="type">signed</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    ios_base::sync_with_stdio(<span class="number">0</span>), <span class="built_in">cin</span>.tie(<span class="number">0</span>); <span class="built_in">cout</span>.tie(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> t;<span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--) &#123;</span><br><span class="line">        <span class="type">int</span> n, m;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;(m%M*(ksm(<span class="number">2</span>, n<span class="number">-1</span>)%M<span class="number">-1</span>+M)%M*ksm(ksm(<span class="number">2</span>, n<span class="number">-1</span>)%M, M<span class="number">-2</span>)%M)%M&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="B-炸鸡块君与FIFA22-倍增-分块-线段树【补】"><a href="#B-炸鸡块君与FIFA22-倍增-分块-线段树【补】" class="headerlink" title="B    炸鸡块君与FIFA22 倍增/分块/线段树【补】"></a>B    炸鸡块君与FIFA22 倍增/分块/线段树【补】</h1><p><strong><a href="https://ac.nowcoder.com/acm/contest/23106/B">题目链接</a></strong><br>【补】</p><h2 id="题意：-5"><a href="#题意：-5" class="headerlink" title="题意："></a>题意：</h2><p>打游戏胜利将使得分加一、失败使分减一、平局使分不变。若你当前的排位分是 $3$ 的整倍数（包括0倍），则若下一局游戏失败，你的排位分将不变（而不是减一）<br>给定一个游戏结果字符串和若干次询问，你需要回答这些询问。<br>$(1&lt;=l, r&lt;=n，q&lt;=2e5,0&lt;=s&lt;=1e9)$</p><h2 id="题解：-5"><a href="#题解：-5" class="headerlink" title="题解："></a>题解：</h2><p>$n,q$ 很大就想到要预处理<br>每次询问每段的答案发现只和首位的初始值%3的值有有关<br>那么预处理从每一位开始以初始值为 $0, 1, 2$开始向后进行操作，但是不能 $n*n$<br>所以就想到暴力分块<br>假如在同一个分块里就直接暴力模拟<br>不在的话<br>就在一整块和另一块以%3的值结果来转移</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">char</span> str[N];</span><br><span class="line"><span class="type">int</span> d[N][<span class="number">5</span>];<span class="comment">//dij代表第i块以j为首值处理后的结果</span></span><br><span class="line"><span class="type">int</span> bl[N], l[N], r[N];</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios_base::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>), cin.<span class="built_in">tie</span>(<span class="number">0</span>); cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> n, q;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;q;</span><br><span class="line">    cin&gt;&gt;str+<span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> B=<span class="built_in">sqrt</span>(n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++) bl[i]=(i+B<span class="number">-1</span>)/B;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=bl[n]; i++) l[i]=r[i<span class="number">-1</span>]+<span class="number">1</span>, r[i]=r[i<span class="number">-1</span>]+B;</span><br><span class="line">    r[bl[n]]=n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=bl[n]; i++) &#123;</span><br><span class="line">        d[i][<span class="number">0</span>]=d[i][<span class="number">1</span>]=d[i][<span class="number">2</span>]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=l[i]; j&lt;=r[i]; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(str[j]==<span class="string">&#x27;W&#x27;</span>) &#123;</span><br><span class="line">                d[i][<span class="number">0</span>]++, d[i][<span class="number">1</span>]++, d[i][<span class="number">2</span>]++;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(str[j]==<span class="string">&#x27;L&#x27;</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span>(d[i][<span class="number">0</span>]%<span class="number">3</span>) d[i][<span class="number">0</span>]--;</span><br><span class="line">                <span class="keyword">if</span>((d[i][<span class="number">1</span>]+<span class="number">1</span>)%<span class="number">3</span>) d[i][<span class="number">1</span>]--;</span><br><span class="line">                <span class="keyword">if</span>((d[i][<span class="number">2</span>]+<span class="number">2</span>)%<span class="number">3</span>) d[i][<span class="number">2</span>]--;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(q--) &#123;</span><br><span class="line">        <span class="type">int</span> le, re, s;</span><br><span class="line">        cin&gt;&gt;le&gt;&gt;re&gt;&gt;s;</span><br><span class="line">        <span class="keyword">if</span>(bl[le]==bl[re]) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=le; i&lt;=re; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(str[i]==<span class="string">&#x27;W&#x27;</span>) &#123;</span><br><span class="line">                    s++;</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>(str[i]==<span class="string">&#x27;L&#x27;</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span>(s%<span class="number">3</span>) s--; </span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            cout&lt;&lt;s&lt;&lt;endl;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=le; i&lt;=r[bl[le]]; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(str[i]==<span class="string">&#x27;W&#x27;</span>) &#123;</span><br><span class="line">                s++;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(str[i]==<span class="string">&#x27;L&#x27;</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span>(s%<span class="number">3</span>) s--; </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=bl[le]+<span class="number">1</span>; i&lt;bl[re]; i++) &#123;</span><br><span class="line">            s=s+d[i][(s+<span class="number">3</span>)%<span class="number">3</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=l[bl[re]]; i&lt;=re; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(str[i]==<span class="string">&#x27;W&#x27;</span>) s++;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(str[i]==<span class="string">&#x27;L&#x27;</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span>(s%<span class="number">3</span>) s --;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;s&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>待补</strong></p><h1 id="K-冒险公社-dp【补】"><a href="#K-冒险公社-dp【补】" class="headerlink" title="K    冒险公社 dp【补】"></a>K    冒险公社 dp【补】</h1><p><strong><a href="https://ac.nowcoder.com/acm/contest/23106/K">题目链接</a></strong><br>【补】<br><a href="https://blog.csdn.net/weixin_45775438/article/details/122686542?spm=1001.2014.3001.5502"><strong>qwq</strong></a><br>发现，第 $i$ 个预测和 $[1,i−3]$ 的所有岛都没有关系，明显符合 dp 的无后效性</p><p>$dp[i][i1][i2][i3]$表示已经走了 $i$ 座山绿岛的最大数量，$i1, i2, i3$表示$i,i-1, i-2$的颜色<br>$dp[i][i1][i2][i3]$是从合法状态的$dp[i−1][i2][i3][i4]$转移过来<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long </span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e5</span>+<span class="number">5</span>; </span><br><span class="line"><span class="type">int</span> dp[N][<span class="number">5</span>][<span class="number">5</span>][<span class="number">5</span>];</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios_base::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>), cin.<span class="built_in">tie</span>(<span class="number">0</span>); cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> n; cin&gt;&gt;n;</span><br><span class="line">    string s; cin&gt;&gt;s; s=<span class="string">&#x27;.&#x27;</span>+s;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">3</span>; i&lt;=n; i++) <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>; j&lt;<span class="number">3</span>; j++)<span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">0</span>; k&lt;<span class="number">3</span>; k++) <span class="keyword">for</span>(<span class="type">int</span> l=<span class="number">0</span>; l&lt;<span class="number">3</span>; l++) dp[i][j][k][l]=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>; j&lt;<span class="number">3</span>; j++)<span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">0</span>; k&lt;<span class="number">3</span>; k++) <span class="keyword">for</span>(<span class="type">int</span> l=<span class="number">0</span>; l&lt;<span class="number">3</span>; l++) &#123;</span><br><span class="line">        dp[<span class="number">2</span>][j][k][l]=<span class="number">0</span>;</span><br><span class="line">        <span class="comment">//if(j==1) dp[2][j][k][l]++;</span></span><br><span class="line">        <span class="keyword">if</span>(j==<span class="number">1</span>) dp[<span class="number">2</span>][j][k][l]++;</span><br><span class="line">        <span class="keyword">if</span>(k==<span class="number">1</span>) dp[<span class="number">2</span>][j][k][l]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> ans=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">3</span>; i&lt;=n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> l=<span class="number">0</span>; l&lt;<span class="number">3</span>; l++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>; j&lt;<span class="number">3</span>; j++) &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">0</span>; k&lt;<span class="number">3</span>; k++) &#123;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="type">int</span> l1=<span class="number">0</span>; l1&lt;<span class="number">3</span>; l1++) &#123;</span><br><span class="line">                        <span class="keyword">if</span>(dp[i<span class="number">-1</span>][j][k][l1]==<span class="number">-1</span>) <span class="keyword">continue</span>;</span><br><span class="line">                        <span class="type">int</span> R=<span class="number">0</span>, G=<span class="number">0</span>;</span><br><span class="line">                        R=(l==<span class="number">0</span>)+(j==<span class="number">0</span>)+(k==<span class="number">0</span>);</span><br><span class="line">                        G=(l==<span class="number">1</span>)+(j==<span class="number">1</span>)+(k==<span class="number">1</span>);</span><br><span class="line">                        <span class="comment">//cout&lt;&lt;R&lt;&lt;&quot; &quot;&lt;&lt;G&lt;&lt;endl;</span></span><br><span class="line">                        <span class="keyword">if</span>(s[i]==<span class="string">&#x27;R&#x27;</span>&amp;&amp;G&lt;R) dp[i][l][j][k]=<span class="built_in">max</span>(dp[i][l][j][k], dp[i<span class="number">-1</span>][j][k][l1]+(l==<span class="number">1</span>));</span><br><span class="line">                        <span class="keyword">if</span>(s[i]==<span class="string">&#x27;G&#x27;</span>&amp;&amp;G&gt;R) dp[i][l][j][k]=<span class="built_in">max</span>(dp[i][l][j][k], dp[i<span class="number">-1</span>][j][k][l1]+(l==<span class="number">1</span>));</span><br><span class="line">                        <span class="keyword">if</span>(s[i]==<span class="string">&#x27;B&#x27;</span>&amp;&amp;G==R) dp[i][l][j][k]=<span class="built_in">max</span>(dp[i][l][j][k], dp[i<span class="number">-1</span>][j][k][l1]+(l==<span class="number">1</span>));</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;<span class="number">3</span>; i++)<span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>; j&lt;<span class="number">3</span>; j++) <span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">0</span>; k&lt;<span class="number">3</span>; k++)</span><br><span class="line">        ans=<span class="built_in">max</span>(ans, dp[n][i][j][k]);</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><h1 id="G-ACM-is-all-you-need-【待补】"><a href="#G-ACM-is-all-you-need-【待补】" class="headerlink" title="G    ACM is all you need 【待补】"></a>G    ACM is all you need 【待补】</h1><p><strong><a href="https://ac.nowcoder.com/acm/contest/23106/G">题目链接</a></strong> </p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><font color=#999AAA >  Qwq</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="ACM" scheme="http://wangqianyu6.github.io/categories/ACM/"/>
    
    
    <category term="牛客" scheme="http://wangqianyu6.github.io/tags/%E7%89%9B%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>CSG - 1123 点到圆弧的距离（计算几何）</title>
    <link href="http://wangqianyu6.github.io/posts/fbfb7b1c.html"/>
    <id>http://wangqianyu6.github.io/posts/fbfb7b1c.html</id>
    <published>2022-03-02T03:46:40.000Z</published>
    <updated>2023-07-14T09:49:06.955Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>：输入一个点  P  和一条圆弧（圆周的一部分），你的任务是计算  P  到圆弧的最短距离。换句话说，你需要在圆弧上找一个点，到  P  点的距离最小。</p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>：呃<br>先找圆心<br>显然<br>假如点跟圆心的连线在那段扇形的圆弧范围内，点到圆弧的最短距离为点到圆心的距离减去半径然后取绝对值；不然，点到圆弧的最短的距离为到这段圆弧的两个端点的最小值。 </p><p> 那怎么判断是不是在圆弧范围内呢？</p><p> 本来想找PB和OA,OC是否有交点但是wa了好像不是精度问题<img src="https://img01.anheyu.com/useruploads/215/2023/07/13/64af839d27b02.png" alt="在这里插入图片描述"><br> 两个点是不是在一条线的两端可以用叉积判断<br> 判断  C,D  点是否在 AB 线段两边<br> 向量 AB 和向量 AC 是顺时针，所以他们的叉积  &gt;0<br> 向量 AB 和向量 AD 是逆时针，所以他们的叉积  &lt;0<br>只要 Cross(AB,AC)*Cross(AB,AD)&lt;0 时，就是在不在同一侧<br>所以这样看， B  就在射线  AC  和  AD  中间~就可以判断 P 是否在圆环范围内<br>对于这题就可以用来判断  P 是否在  OC,OA 之间</p><p>但是上面只适用劣弧的情况 还要考虑平角和优弧的情况 反正还是用这个叉积判qaq</p><p><img src="https://img01.anheyu.com/useruploads/215/2023/07/13/64af83978791e.png" alt="在这里插入图片描述"></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>：<br><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#include &lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="built_in">double</span> eps = <span class="number">1e-8</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="built_in">double</span> PI = acos(<span class="number">-1.0</span>);</span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">sgn</span>(<span class="params"><span class="built_in">double</span> x</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (fabs(x) &lt; eps) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> (x &lt; <span class="number">0</span>) ? <span class="number">-1</span> : <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">struct</span> Point &#123;</span><br><span class="line">    <span class="built_in">double</span> x, y;</span><br><span class="line">    Point(<span class="built_in">double</span> x = <span class="number">0.0</span>, <span class="built_in">double</span> y = <span class="number">0.0</span>) : x(x), y(y) &#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line">typedef Point Vector; <span class="comment">//向量</span></span><br><span class="line">Vector <span class="keyword">operator</span> + (Vector A, Vector B) &#123; <span class="comment">//向量加法</span></span><br><span class="line">    <span class="keyword">return</span> Vector(A.x + B.x, A.y + B.y);</span><br><span class="line">&#125;</span><br><span class="line">Vector <span class="keyword">operator</span> - (Point A, Point B) &#123;</span><br><span class="line">    <span class="keyword">return</span> Vector(A.x - B.x, A.y - B.y);</span><br><span class="line">&#125;</span><br><span class="line">Vector <span class="keyword">operator</span> * (Vector A, <span class="built_in">double</span> p) &#123;</span><br><span class="line">    <span class="keyword">return</span> Vector(A.x * p, A.y * p);</span><br><span class="line">&#125;</span><br><span class="line">Vector <span class="keyword">operator</span> / (Vector A, <span class="built_in">double</span> p) &#123;</span><br><span class="line">    <span class="keyword">return</span> Vector(A.x / p, A.y / p);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> Point A, <span class="keyword">const</span> Point B) &#123;</span><br><span class="line">    <span class="keyword">return</span> A.x &lt; B.x || (sgn(A.x - B.x) == <span class="number">0</span> &amp;&amp; A.y &lt; B.y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">bool</span> <span class="keyword">operator</span> == (<span class="keyword">const</span> Point A, <span class="keyword">const</span> Point B) &#123;</span><br><span class="line">    <span class="keyword">return</span> sgn(A.x - B.x) == <span class="number">0</span> &amp;&amp; sgn(A.y - B.y) == <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="built_in">double</span> <span class="title">Dot</span>(<span class="params">Vector A, Vector B</span>)</span> &#123;<span class="comment">//点积</span></span><br><span class="line">    <span class="keyword">return</span> A.x * B.x + A.y * B.y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="built_in">double</span> <span class="title">Cross</span>(<span class="params">Vector A, Vector B</span>)</span> &#123;<span class="comment">//向量叉积</span></span><br><span class="line">    <span class="keyword">return</span> A.x * B.y - A.y * B.x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="built_in">double</span> <span class="title">Length</span>(<span class="params">Vector A</span>)</span> &#123;<span class="comment">//模</span></span><br><span class="line">    <span class="keyword">return</span> sqrt(Dot(A, A));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">Vector <span class="title">Normal</span>(<span class="params">Vector A</span>)</span> &#123;<span class="comment">//单位向量</span></span><br><span class="line">    <span class="built_in">double</span> L = Length(A);</span><br><span class="line">    <span class="keyword">return</span> Vector(-A.y / L, A.x / L);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">Point <span class="title">GetLineIntersection</span>(<span class="params">Point P, Vector v, Point Q, Vector w</span>)</span> &#123;<span class="comment">//两直线焦点</span></span><br><span class="line">    Vector u = P - Q;</span><br><span class="line">    <span class="built_in">double</span> t = Cross(w, u) / Cross(v, w);</span><br><span class="line">    <span class="keyword">return</span> P + v * t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="built_in">double</span> <span class="title">dis</span>(<span class="params">Point a, Point b</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> sqrt((a.x - b.x) * (a.x - b.x) + (a.y - b.y) * (a.y - b.y));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">signed <span class="title">main</span>()</span> &#123;</span><br><span class="line">    <span class="built_in">int</span> t=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">double</span> x1, y1, x2, y2, x3, y3, xp, yp;</span><br><span class="line">    <span class="keyword">while</span>(cin &gt;&gt; x1 &gt;&gt;y1 &gt;&gt; x2 &gt;&gt; y2 &gt;&gt; x3 &gt;&gt; y3 &gt;&gt; xp &gt;&gt; yp) &#123;</span><br><span class="line"></span><br><span class="line">        Point A = &#123; x1,y1 &#125;;</span><br><span class="line">        Point B = &#123; x2,y2 &#125;;</span><br><span class="line">        Point AB = &#123; (x1 + x2) / <span class="number">2</span>,(y1 + y2) / <span class="number">2</span> &#125;;</span><br><span class="line">        Point C = &#123; x3,y3 &#125;;</span><br><span class="line">        Point BC = &#123; (x3 + x2) / <span class="number">2</span>,(y3 + y2) / <span class="number">2</span> &#125;;</span><br><span class="line">        Point P = &#123; xp,yp &#125;;</span><br><span class="line">        Point O = GetLineIntersection(AB, Normal(A - B), BC, Normal(B - C));<span class="comment">//也可以用三角形外心找圆心</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">double</span> ans = min(dis(P, A), dis(P, C));</span><br><span class="line">        <span class="built_in">double</span> d = dis(O, P);</span><br><span class="line">        <span class="built_in">double</span> r = dis(O, A);</span><br><span class="line"><span class="keyword">if</span>((<span class="number">2</span>*r==dis(A, C))) &#123;</span><br><span class="line"><span class="keyword">if</span>(Cross(A-C, A-P)*Cross(A-C,A-B)&gt;=<span class="number">0</span>) &#123;</span><br><span class="line">ans=min(ans, fabs(d-r));</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Case &quot;</span> &lt;&lt; ++t &lt;&lt; <span class="string">&quot;: &quot;</span> &lt;&lt;<span class="keyword">fixed</span>&lt;&lt; setprecision(<span class="number">3</span>) &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">        <span class="keyword">if</span>(Cross(C-A, C-B)*Cross(C-A, C-O)&lt;<span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">if</span>(Cross(O-A, O-P)*Cross(O-A,O-C)&gt;=<span class="number">0</span>&amp;&amp;Cross(O-C, O-P)*Cross(O-C,O-A)&gt;=<span class="number">0</span>) &#123;</span><br><span class="line">ans=min(ans, fabs(d-r));</span><br><span class="line">&#125;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(!(Cross(O-A, O-P)*Cross(O-A,O-C)&gt;=<span class="number">0</span>&amp;&amp;Cross(O-C, O-P)*Cross(O-C,O-A)&gt;=<span class="number">0</span>)) &#123;</span><br><span class="line">ans=min(ans, fabs(d-r));</span><br><span class="line">&#125;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Case &quot;</span> &lt;&lt; ++t &lt;&lt; <span class="string">&quot;: &quot;</span> &lt;&lt;<span class="keyword">fixed</span>&lt;&lt; setprecision(<span class="number">3</span>) &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>一道计算几何 暖你一整天</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="ACM" scheme="http://wangqianyu6.github.io/categories/ACM/"/>
    
    
    <category term="计算几何" scheme="http://wangqianyu6.github.io/tags/%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>牛客挑战赛 46 B最下的指数（分解质因子，分类讨论）</title>
    <link href="http://wangqianyu6.github.io/posts/ce1d8c1b.html"/>
    <id>http://wangqianyu6.github.io/posts/ce1d8c1b.html</id>
    <published>2022-01-21T08:55:40.000Z</published>
    <updated>2023-07-14T09:48:46.425Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="题目链接：最小的指数"><a href="#题目链接：最小的指数" class="headerlink" title="题目链接：最小的指数"></a><a href="https://ac.nowcoder.com/acm/contest/9510/B"><strong>题目链接：最小的指数</strong></a></h1><h2 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h2><p>牛妹手里捧着 T 个数，对于每个数x，将其分解质因数，并输出它的质因子指数的最小值。<br>形式化地，对于数x = p1^a1 * p2^a2 … pk^ak，输出min{a1,a2…ak}。<br>1&lt;=T&lt;=100000 , 1&lt;=n&lt;=1018</p><h2 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h2><p>首先想到素数的话min=1 <a href="https://www.cnblogs.com/zhanhonhao/p/11257962.html"><strong>米勒罗宾素数检测（Miller-Rabin）</strong></a><br>然后min&lt;=64<br>然后指数&lt;=sqrt(1e18)<br>然后假设min==6就可以小范围素数筛搞搞<br>T=1e5<br>所以把1e4内的质数筛出来, 每次先把 $n$, 变成 $1$ 或者 $&gt;1e4$ 的数<br>对于剩下的数大于 $1e4$ 的剩下的答案无非是 1,2,3,4</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">2e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">bool</span> vis[N];</span><br><span class="line"><span class="type">int</span> prime[N];</span><br><span class="line"><span class="type">int</span> tot=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">prim</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    vis[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>; i&lt;=<span class="number">10005</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(!vis[i]) prime[++tot]=i;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>; j&lt;=tot; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(i*prime[j]&gt;<span class="number">10000</span>) <span class="keyword">break</span>;</span><br><span class="line">            vis[i*prime[j]]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(i%prime[j]==<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">prim</span>();</span><br><span class="line">    <span class="comment">//cout&lt;&lt;tot&lt;&lt;endl;</span></span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--) &#123;</span><br><span class="line">        <span class="type">int</span> n;</span><br><span class="line">        cin&gt;&gt;n;</span><br><span class="line">        <span class="keyword">if</span>(n==<span class="number">1</span>) &#123;</span><br><span class="line">            cout&lt;&lt;<span class="number">0</span>&lt;&lt;endl;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> ans=<span class="number">1e18</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=tot; i++) &#123;</span><br><span class="line">            <span class="type">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span>(n%prime[i]==<span class="number">0</span>) &#123;</span><br><span class="line">                n/=prime[i];</span><br><span class="line">                cnt++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(cnt) ans=<span class="built_in">min</span>(ans, cnt);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(n&gt;<span class="number">10000</span>) &#123;</span><br><span class="line">            <span class="type">int</span> a=<span class="built_in">sqrt</span>(<span class="number">1.0</span>*n);</span><br><span class="line">            <span class="type">int</span> c=(<span class="built_in">pow</span>(n*<span class="number">1.0</span>, <span class="number">1.0</span>/<span class="number">3</span>)+<span class="number">0.1</span>);<span class="comment">//卡精度了 可以在外面预处理三次方</span></span><br><span class="line">            <span class="type">int</span> b=<span class="built_in">sqrt</span>(a);</span><br><span class="line">            <span class="keyword">if</span>(b*b*b*b==n) ans=<span class="built_in">min</span>(ans, <span class="number">4ll</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(c*c*c==n) ans=<span class="built_in">min</span>(ans, <span class="number">3ll</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(a*a==n) ans=<span class="built_in">min</span>(ans, <span class="number">2ll</span>);</span><br><span class="line">            <span class="keyword">else</span> ans=<span class="built_in">min</span>(ans, <span class="number">1ll</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><font color=#999AAA >提示：这里对文章进行总结：<br>例如：以上就是今天要讲的内容，本文仅仅简单介绍了pandas的使用，而pandas提供了大量能使我们快速便捷地处理数据的函数和方法。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="ACM" scheme="http://wangqianyu6.github.io/categories/ACM/"/>
    
    
    <category term="分类讨论" scheme="http://wangqianyu6.github.io/tags/%E5%88%86%E7%B1%BB%E8%AE%A8%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>数据结构————图的连通性算法</title>
    <link href="http://wangqianyu6.github.io/posts/eb33bc3c.html"/>
    <id>http://wangqianyu6.github.io/posts/eb33bc3c.html</id>
    <published>2021-07-21T08:55:40.000Z</published>
    <updated>2023-07-13T03:11:52.893Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="相关概念"><a href="#相关概念" class="headerlink" title="相关概念"></a>相关概念</h1><p><strong>割点</strong>：无向连通图，删除这个点和这个点关联的边，图不连通</p><p><strong>点双连通图</strong>：无向连通图，没有割点出现</p><p><strong>桥</strong>：无向连通图，删除某条边，图不连通</p><p><strong>边双连通图</strong>：无向连通图，没有桥</p><p><strong>时间戳</strong>：对一个图做深度优先搜索的时候，第一次访问某个点的时间</p><p><strong>强连通分量</strong>：有向图任意两点都可互相到达</p><p>​        </p><h1 id="求割点和点连通分量"><a href="#求割点和点连通分量" class="headerlink" title="求割点和点连通分量"></a>求割点和点连通分量</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> times = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> dfn[maxn], low[maxn]; <span class="comment">// dfn记录时间戳</span></span><br><span class="line"><span class="comment">// low(u)来表示 u 以及其后代 **最多经过** 一条反向边能回到的最早的点的时间戳</span></span><br><span class="line"><span class="type">int</span> bcc_cnt = <span class="number">0</span>;  <span class="comment">// 点双连通分量数量</span></span><br><span class="line"><span class="type">bool</span> iscut[maxn];  <span class="comment">// 标记是否是割点</span></span><br><span class="line"><span class="type">bool</span> vis[maxn&lt;&lt;<span class="number">1</span>]; <span class="comment">// 记录这条边是不是访问过了处理重编</span></span><br><span class="line"><span class="built_in">set</span>&lt;<span class="type">int</span>&gt; bcc[maxn];  <span class="comment">// 记录每个点双连通分量里面的点</span></span><br><span class="line"><span class="built_in">stack</span>&lt;edge&gt; S; <span class="comment">// 记录连通分量的点集</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">dfs</span> <span class="params">(<span class="type">int</span> u, <span class="type">int</span> fa)</span> &#123;</span><br><span class="line">    dfn[u] = low[u] = ++times;</span><br><span class="line">    <span class="type">int</span> child = <span class="number">0</span>;  <span class="comment">// 用来处理根结点子结点数</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = p[u]; i != <span class="number">-1</span>; i = E[i].next) &#123;</span><br><span class="line">        <span class="type">int</span> v = E[i].v;</span><br><span class="line">        <span class="keyword">if</span>(vis[i])<span class="keyword">continue</span>;</span><br><span class="line">        vis[i]=vis[i^<span class="number">1</span>]=<span class="number">1</span>;<span class="comment">//</span></span><br><span class="line">        <span class="keyword">if</span> (dfn[v] == <span class="number">0</span>) &#123;  <span class="comment">// v 没有被访问过，u, v 是树边</span></span><br><span class="line">            S.push(E[i]);</span><br><span class="line">            ++child;</span><br><span class="line">            dfs(v, u);</span><br><span class="line">            low[u] = min(low[u], low[v]);</span><br><span class="line">            <span class="comment">/*if(low[v]&gt;dfn[u]) 桥++；*/</span></span><br><span class="line">            <span class="keyword">if</span> (low[v] &gt;= dfn[u]) &#123;</span><br><span class="line">            <span class="comment">// 当且仅当 u 存在一个子结点 v，使得 v 及其所有后代都没有反向边连回 u 的**祖先**（不包括 u）</span></span><br><span class="line">                iscut[u] = <span class="literal">true</span>;</span><br><span class="line">                ++bcc_cnt;  <span class="comment">// 增加一个点双连通分量</span></span><br><span class="line">                <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">                    edge x = S.top();</span><br><span class="line">                    S.pop();</span><br><span class="line">                    bcc[bcc_cnt].insert(x.u);</span><br><span class="line">                    bcc[bcc_cnt].insert(x.v);</span><br><span class="line">                    <span class="keyword">if</span> (x.u == u &amp;&amp; x.v == v) &#123;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span>  &#123;  <span class="comment">// 反向边，注意 v == fa 的时候，是访问重复的边</span></span><br><span class="line">            S.push(E[i]);</span><br><span class="line">            low[u] = min(low[u], dfn[v]);<span class="comment">// 初始的时候，low(u) = dfn(u)low(u)=dfn(u)，我们认为自己当然可以回到自己</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (fa &lt; <span class="number">0</span> &amp;&amp; child == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="comment">// fa &lt; 0 表示根结点，之前根结点一定被标记为割点, 取消之</span></span><br><span class="line">        <span class="comment">//对于树根来说当且仅当它有两个或者更多的子结点的时候，它才是割点</span></span><br><span class="line">        iscut[u] = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//普通建图输出点霜</span></span><br><span class="line"><span class="built_in">memset</span>(dfn, <span class="number">0</span>, <span class="keyword">sizeof</span>(dfn));</span><br><span class="line">    times=bcc_cnt=<span class="number">0</span>;</span><br><span class="line">    dfs(<span class="number">1</span>, <span class="number">-1</span>);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;bcc_cnt&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=bcc_cnt; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="built_in">set</span>&lt;<span class="type">int</span>&gt;::iterator it=bcc[i].begin(); it!=bcc[i].end(); it++) &#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;(*it)&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>emm<br>例题<br><a href="https://vjudge.net/problem/HDU-3394/origin"><strong>铁路</strong></a><br>一直t不知道为啥<br>55看队长的题解</p><font color=#999AAA ><h1 id="桥和边连通分量"><a href="#桥和边连通分量" class="headerlink" title="桥和边连通分量"></a>桥和边连通分量</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> times = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> dfn[maxn], low[maxn];</span><br><span class="line"><span class="type">int</span> bcc_cnt = <span class="number">0</span>;        <span class="comment">// 边双连通分量数量</span></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="type">int</span>&gt; bcc[maxn];  <span class="comment">// 记录每个点双连通分量里面的点 因为就经过一次就装在vector里</span></span><br><span class="line"><span class="built_in">stack</span>&lt;<span class="type">int</span>&gt; S;</span><br><span class="line"><span class="type">void</span> <span class="title function_">dfs</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> fa)</span> &#123;</span><br><span class="line">    dfn[u] = low[u] = ++times;</span><br><span class="line">    S.push(u);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = p[u]; i != <span class="number">-1</span>; i = E[i].next) &#123;</span><br><span class="line">        <span class="type">int</span> v = E[i].v;</span><br><span class="line">        <span class="keyword">if</span> (dfn[v] == <span class="number">0</span>) &#123;  <span class="comment">// v 没有被访问过，u, v 是树边</span></span><br><span class="line">            dfs(v, u);</span><br><span class="line">            low[u] = min(low[u], low[v]);<span class="comment">// 根据low数组的含义</span></span><br><span class="line">            </span><br><span class="line">            <span class="comment">/*if(low[v]&gt;dfn[u]) 桥++；*/</span></span><br><span class="line">            </span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (dfn[v] &lt; dfn[u] &amp;&amp; v != fa) &#123;  <span class="comment">// 反向边，注意 v == fa 的时候，是访问重复的边</span></span><br><span class="line">            low[u] = min(low[u], dfn[v]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (low[u] == dfn[u]) &#123;  <span class="comment">// 此时 u 是根结点或者 fa -&gt; u 是桥</span></span><br><span class="line">        ++bcc_cnt;           <span class="comment">// 增加一个边双连通分量</span></span><br><span class="line">        <span class="keyword">while</span> (!S.empty()) &#123;  <span class="comment">//从栈中弹出 u 及 u 之后的顶点</span></span><br><span class="line">            <span class="type">int</span> x = S.top();</span><br><span class="line">            S.pop();</span><br><span class="line">            bcc[bcc_cnt].push_back(x);</span><br><span class="line">            <span class="keyword">if</span> (x == u) <span class="keyword">break</span>;  </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    init();</span><br><span class="line">    <span class="type">int</span> n, m;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; ++i) &#123;</span><br><span class="line">        <span class="type">int</span> u, v;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; u &gt;&gt; v;</span><br><span class="line">        insert(u, v);</span><br><span class="line">        insert(v, u);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">memset</span>(dfn, <span class="number">0</span>, <span class="keyword">sizeof</span>(dfn));</span><br><span class="line">    times=bcc_cnt=<span class="number">0</span>;</span><br><span class="line">    dfs(<span class="number">1</span>, <span class="number">-1</span>);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; bcc_cnt &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= bcc_cnt; ++i) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; bcc[i].size(); j++) &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; bcc[i][j] &lt;&lt; <span class="string">&quot; &quot;</span>;<span class="comment">// 输出边双</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>例题<br><a href="https://vjudge.net/contest/448102#problem/G"><strong>Redundant Paths</strong> </a><br>题意： 添加最少的边使这棵树上所有的链都变成环<br>缩点后是一棵树 贪心 注意重边标记</p><p>对于无向图的缩点，由于是无向图，所以要从u到v建一条边，又要从v到u建一条边，但是，在tarjan时会有两条边重复，这是一个麻烦，而且，还不得不建两条边，这该怎么办呢？<br>解决的方法就是，当同一条无向边的两条有向边的其中一条走过时，把另一条同时赋值为走过，这就要用到一个神奇的公式，^ 1。<br> 举例来说，<br> 0 ^ 1=1, 1 ^ 1=0;<br> 2 ^ 1=3, 3 ^ 1=2;<br> 4 ^ 1=5, 5 ^ 1=4;<br> 而建边的时候，一条无向边的两条有向边刚好相差1</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxm = <span class="number">1010</span>;  </span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">110</span>; </span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span> &#123;</span></span><br><span class="line">    <span class="type">int</span> u, v;</span><br><span class="line">    <span class="type">int</span> next;</span><br><span class="line">&#125; E[maxm];</span><br><span class="line"><span class="type">int</span> p[maxn], eid = <span class="number">0</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">init</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="built_in">memset</span>(p, <span class="number">-1</span>, <span class="keyword">sizeof</span>(p));</span><br><span class="line">    eid = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">insert</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> v)</span> &#123;</span><br><span class="line">    E[eid].u = u;</span><br><span class="line">    E[eid].v = v;</span><br><span class="line">    E[eid].next = p[u];</span><br><span class="line">    p[u] = eid++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> times = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> dfn[maxn], low[maxn];</span><br><span class="line"><span class="type">int</span> bc[maxm], in[maxn], chu[maxn];</span><br><span class="line"><span class="type">int</span> bcc_cnt = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="type">int</span>&gt; bcc[maxn];</span><br><span class="line"><span class="built_in">stack</span>&lt;<span class="type">int</span>&gt; S;</span><br><span class="line"><span class="type">bool</span> vis[maxm&lt;&lt;<span class="number">1</span>];</span><br><span class="line"><span class="type">void</span> <span class="title function_">dfs</span><span class="params">(<span class="type">int</span> u)</span> &#123;</span><br><span class="line">    dfn[u] = low[u] = ++times;</span><br><span class="line">    S.push(u);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = p[u]; i != <span class="number">-1</span>; i = E[i].next) &#123;</span><br><span class="line"><span class="keyword">if</span>(!vis[i]) &#123;<span class="comment">// 拿vis数组来标记是否经过 解决重边问题 然后缩点处理</span></span><br><span class="line">vis[i]=vis[i^<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="type">int</span> v = E[i].v;</span><br><span class="line"><span class="keyword">if</span> (dfn[v] == <span class="number">0</span>) &#123;</span><br><span class="line">dfs(v);</span><br><span class="line">low[u] = min(low[u], low[v]);</span><br><span class="line">&#125; <span class="keyword">else</span>  &#123;</span><br><span class="line">low[u] = min(low[u], dfn[v]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (low[u] == dfn[u]) &#123;</span><br><span class="line">        ++bcc_cnt;</span><br><span class="line">        <span class="keyword">while</span> (!S.empty()) &#123;</span><br><span class="line">            <span class="type">int</span> x = S.top();</span><br><span class="line">            S.pop();</span><br><span class="line">            bc[x]=bcc_cnt; <span class="comment">// 标记这个点是那个边双里的</span></span><br><span class="line">            bcc[bcc_cnt].push_back(x);</span><br><span class="line">            <span class="keyword">if</span> (x == u) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    init();</span><br><span class="line">    <span class="type">int</span> n, m;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; ++i) &#123;</span><br><span class="line">        <span class="type">int</span> u, v;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; u &gt;&gt; v;</span><br><span class="line">        insert(u, v);</span><br><span class="line">        insert(v, u);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">memset</span>(dfn, <span class="number">0</span>, <span class="keyword">sizeof</span>(dfn));</span><br><span class="line">    times=bcc_cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; ++i) <span class="keyword">if</span> (!dfn[i]) dfs(i);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> u=<span class="number">1</span>; u&lt;=n; u++) &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=p[u]; i!=<span class="number">-1</span>; i=E[i].next) &#123;</span><br><span class="line"><span class="type">int</span> v=E[i].v;</span><br><span class="line"><span class="keyword">if</span>(bc[v]!=bc[u]) &#123;</span><br><span class="line">in[bc[v]]++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    &#125;<span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=bcc_cnt; i++) &#123;</span><br><span class="line"><span class="keyword">if</span>(in[i]==<span class="number">1</span>) ans++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;(ans+<span class="number">1</span>)/<span class="number">2</span>&lt;&lt;<span class="built_in">endl</span>;<span class="comment">// 最后</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="强连通分量"><a href="#强连通分量" class="headerlink" title="强连通分量"></a>强连通分量</h1><p>复杂度（V+E）<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxm = <span class="number">1010</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">110</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span> &#123;</span></span><br><span class="line">    <span class="type">int</span> v;</span><br><span class="line">    <span class="type">int</span> next;</span><br><span class="line">&#125; E[maxm];</span><br><span class="line"><span class="type">int</span> p[maxn], eid = <span class="number">0</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">init</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="built_in">memset</span>(p, <span class="number">-1</span>, <span class="keyword">sizeof</span>(p));</span><br><span class="line">    eid = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">insert</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> v)</span> &#123;</span><br><span class="line">    E[eid].v = v;</span><br><span class="line">    E[eid].next = p[u];</span><br><span class="line">    p[u] = eid++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> times = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> dfn[maxn], low[maxn];</span><br><span class="line"><span class="type">int</span> scc_cnt = <span class="number">0</span>;  <span class="comment">// 强连通分量数量</span></span><br><span class="line"><span class="type">int</span> sccno[maxn];  <span class="comment">// 记录每个点属于的强连通分量的编号</span></span><br><span class="line"><span class="built_in">set</span>&lt;<span class="type">int</span>&gt; scc[maxn];</span><br><span class="line"><span class="built_in">stack</span>&lt;<span class="type">int</span>&gt; S;<span class="comment">// 把点压入栈中 因为每个点只属于一个强连通分量</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">dfs</span> <span class="params">(<span class="type">int</span> u)</span> &#123;</span><br><span class="line">    dfn[u] = low[u] = ++times;</span><br><span class="line">    S.push(u);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = p[u]; i != <span class="number">-1</span>; i = E[i].next) &#123;</span><br><span class="line">        <span class="type">int</span> v = E[i].v;</span><br><span class="line">        <span class="keyword">if</span> (dfn[v] == <span class="number">0</span>) &#123;  <span class="comment">// v 没有被访问过，u, v 是树边</span></span><br><span class="line">            dfs(v);</span><br><span class="line">            low[u] = min(low[u], low[v]);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!sccno[v]) &#123;  <span class="comment">// 对于已经求出 scc 的点，直接删除</span></span><br><span class="line">            low[u] = min(low[u], dfn[v]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (low[u] == dfn[u]) &#123;  <span class="comment">// 说明 u 是第一个被探测到的点</span></span><br><span class="line">        ++scc_cnt;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            <span class="type">int</span> x = S.top();</span><br><span class="line">            S.pop();</span><br><span class="line">            sccno[x] = scc_cnt;<span class="comment">// 记录这个点在哪个连通分量</span></span><br><span class="line">            scc[scc_cnt].insert(x);</span><br><span class="line">            <span class="keyword">if</span> (x == u) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*缩点</span></span><br><span class="line"><span class="comment">edge new_E[maxm];</span></span><br><span class="line"><span class="comment">int new_p[maxn], new_eid=0;</span></span><br><span class="line"><span class="comment">void new_init() &#123;</span></span><br><span class="line"><span class="comment">    memset(new_p, -1, sizeof(new_p));</span></span><br><span class="line"><span class="comment">    new_eid=0;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">void new_insert(int u, int v) &#123;</span></span><br><span class="line"><span class="comment">    new_E[new_eid].v=v;</span></span><br><span class="line"><span class="comment">    new_E[new_eid].next=new_p[u];</span></span><br><span class="line"><span class="comment">    new_p[u]=new_eid++;</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    init();</span><br><span class="line">    <span class="type">int</span> n, m;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; ++i) &#123;</span><br><span class="line">        <span class="type">int</span> u, v;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; u &gt;&gt; v;</span><br><span class="line">        insert(u, v);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">memset</span>(dfn, <span class="number">0</span>, <span class="keyword">sizeof</span>(dfn));</span><br><span class="line">    <span class="built_in">memset</span>(sccno, <span class="number">0</span>, <span class="keyword">sizeof</span>(sccno));</span><br><span class="line">    times = scc_cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!dfn[i]) &#123;  <span class="comment">// 每个点都要尝试 dfs 一次</span></span><br><span class="line">            dfs(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> <span class="comment">/* 缩点</span></span><br><span class="line"><span class="comment"> new_init();</span></span><br><span class="line"><span class="comment">    for(int u=1; u&lt;=n; ++u) &#123;</span></span><br><span class="line"><span class="comment">        for(int i=p[u]; i!=-1; i=E[i].next) &#123;</span></span><br><span class="line"><span class="comment">            int v=E[i].v;</span></span><br><span class="line"><span class="comment">            if(sccno[u]!=sccno[v]) &#123;</span></span><br><span class="line"><span class="comment">                new_insert(sccno[u], sccno[v]);</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; scc_cnt &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= scc_cnt; ++i) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">set</span>&lt;<span class="type">int</span>&gt;::iterator it = scc[i].begin(); it != scc[i].end(); ++it) &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; (*it) &lt;&lt; <span class="string">&quot; &quot;</span>;<span class="comment">// 输出连通分量</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>例题<br><a href="https://vjudge.net/problem/HDU-1269/origin"><strong>迷宫</strong></a><br>裸板子判断是不是强连通图<br><a href="https://vjudge.net/problem/HDU-5934/origin"><strong>炸弹</strong></a><br>本来想用并查集但是情况复杂的多<br><a href="https://vjudge.net/problem/POJ-1236/origin"><strong>学校</strong></a><br>题意：添加尽可能少的边使新图强连通：</p><p>我们先求出强连通分量，然后缩点得到一个DAG，假设新图上有a个结点的入度为0，有b个节点的出度为0，ans=max(a, b)(出度为0的点连入入度为0的点);<br>特殊情况：原图本身是强连通的时候答案是0不是1</p><h1 id="欧拉回路"><a href="#欧拉回路" class="headerlink" title="欧拉回路"></a>欧拉回路</h1><p><a href="https://www.luogu.com.cn/problem/P1341"><strong>无序字母对</strong></a></p><h1 id="最小树形图"><a href="#最小树形图" class="headerlink" title="最小树形图"></a>最小树形图</h1><p><a href="https://oi-wiki.org/"><strong>模板</strong></a></p><p><a href="https://vjudge.net/problem/HDU-2121/origin"><strong>冰激凌世界</strong></a><br><a href="https://vjudge.net/problem/POJ-3164/origin"><strong>网络</strong></a></p><p>&lt;hr style=” border:solid; width:100px; height:1px;” color=#000000 size=1”&gt;</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>bshd<br>看题面不知道怎么转化成图的连通性问题 板子也不熟</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="课程" scheme="http://wangqianyu6.github.io/categories/%E8%AF%BE%E7%A8%8B/"/>
    
    
    <category term="数据结构" scheme="http://wangqianyu6.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
</feed>
